{"ast":null,"code":"/* global _WORKLET _getCurrentTime _frameTimestamp _eventTimestamp, _setGlobalConsole */\nimport NativeReanimated from './NativeReanimated';\nimport { Platform } from 'react-native';\nimport { addWhitelistedNativeProps } from '../ConfigHelper';\n\nglobal.__reanimatedWorkletInit = function (worklet) {\n  worklet.__worklet = true;\n};\n\nif (global._setGlobalConsole === undefined) {\n  // it can happen when Reanimated plugin wasn't added, but the user uses the only API from version 1\n  global._setGlobalConsole = () => {// noop\n  };\n}\n\nexport const checkPluginState = () => {\n  if (!(() => {\n    'worklet';\n  }).__workletHash && !process.env.JEST_WORKER_ID) {\n    throw new Error(\"Reanimated 2 failed to create a worklet, maybe you forgot to add Reanimated's babel plugin?\");\n  }\n};\n\nfunction _toArrayReanimated(object) {\n  'worklet';\n\n  if (Array.isArray(object)) {\n    return object;\n  }\n\n  if (typeof Symbol !== 'undefined' && (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator') in Object(object)) return Array.from(object);\n  throw new 'Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'();\n}\n\nfunction _mergeObjectsReanimated() {\n  'worklet';\n\n  return Object.assign.apply(null, arguments);\n}\n\nglobal.__reanimatedWorkletInit = function (worklet) {\n  worklet.__worklet = true;\n\n  if (worklet._closure) {\n    const closure = worklet._closure;\n    Object.keys(closure).forEach(key => {\n      if (key === '_toConsumableArray') {\n        closure[key] = _toArrayReanimated;\n      }\n\n      if (key === '_objectSpread') {\n        closure[key] = _mergeObjectsReanimated;\n      }\n    });\n  }\n};\n\nfunction pushFrame(frame) {\n  NativeReanimated.pushFrame(frame);\n}\n\nexport function requestFrame(frame) {\n  'worklet';\n\n  if (NativeReanimated.native) {\n    requestAnimationFrame(frame);\n  } else {\n    pushFrame(frame);\n  }\n}\nglobal._WORKLET = false;\n\nglobal._log = function (s) {\n  console.log(s);\n};\n\nexport function runOnUI(worklet) {\n  return makeShareable(worklet);\n}\nexport function makeShareable(value) {\n  checkPluginState();\n  return NativeReanimated.makeShareable(value);\n}\nexport function getViewProp(viewTag, propName) {\n  return new Promise((resolve, reject) => {\n    return NativeReanimated.getViewProp(viewTag, propName, result => {\n      if (result.substr(0, 6) === 'error:') {\n        reject(result);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n}\n\nlet _getTimestamp;\n\nif (process.env.JEST_WORKER_ID) {\n  _getTimestamp = () => {\n    return Date.now();\n  };\n} else {\n  _getTimestamp = () => {\n    'worklet';\n\n    if (_frameTimestamp) {\n      return _frameTimestamp;\n    }\n\n    if (_eventTimestamp) {\n      return _eventTimestamp;\n    }\n\n    return _getCurrentTime();\n  };\n}\n\nexport function getTimestamp() {\n  'worklet';\n\n  if (Platform.OS === 'web') {\n    return NativeReanimated.getTimestamp();\n  }\n\n  return _getTimestamp();\n}\n\nfunction workletValueSetter(value) {\n  'worklet';\n\n  const previousAnimation = this._animation;\n\n  if (previousAnimation) {\n    previousAnimation.cancelled = true;\n    this._animation = null;\n  }\n\n  if (typeof value === 'function' || value !== null && typeof value === 'object' && value.onFrame) {\n    const animation = typeof value === 'function' ? value() : value; // prevent setting again to the same value\n    // and triggering the mappers that treat this value as an input\n    // this happens when the animation's target value(stored in animation.current until animation.onStart is called) is set to the same value as a current one(this._value)\n    // built in animations that are not higher order(withTiming, withSpring) hold target value in .current\n\n    if (this._value === animation.current && !animation.isHigherOrder) {\n      return;\n    } // animated set\n\n\n    const initializeAnimation = timestamp => {\n      animation.onStart(animation, this.value, timestamp, previousAnimation);\n    };\n\n    initializeAnimation(getTimestamp());\n\n    const step = timestamp => {\n      if (animation.cancelled) {\n        animation.callback && animation.callback(false\n        /* finished */\n        );\n        return;\n      }\n\n      const finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      this._value = animation.current;\n\n      if (finished) {\n        animation.callback && animation.callback(true\n        /* finished */\n        );\n      } else {\n        requestAnimationFrame(step);\n      }\n    };\n\n    this._animation = animation;\n\n    if (_frameTimestamp) {\n      // frame\n      step(_frameTimestamp);\n    } else {\n      requestAnimationFrame(step);\n    }\n  } else {\n    // prevent setting again to the same value\n    // and triggering the mappers that treat this value as an input\n    if (this._value === value) {\n      return;\n    }\n\n    this._value = value;\n  }\n} // We cannot use pushFrame\n// so we use own implementation for js\n\n\nfunction workletValueSetterJS(value) {\n  const previousAnimation = this._animation;\n\n  if (previousAnimation) {\n    previousAnimation.cancelled = true;\n    this._animation = null;\n  }\n\n  if (typeof value === 'function' || value !== null && typeof value === 'object' && value.onFrame) {\n    // animated set\n    const animation = typeof value === 'function' ? value() : value;\n\n    let initializeAnimation = timestamp => {\n      animation.onStart(animation, this.value, timestamp, previousAnimation);\n    };\n\n    const step = timestamp => {\n      if (animation.cancelled) {\n        animation.callback && animation.callback(false\n        /* finished */\n        );\n        return;\n      }\n\n      if (initializeAnimation) {\n        initializeAnimation(timestamp);\n        initializeAnimation = null; // prevent closure from keeping ref to previous animation\n      }\n\n      const finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n\n      this._setValue(animation.current);\n\n      if (finished) {\n        animation.callback && animation.callback(true\n        /* finished */\n        );\n      } else {\n        requestFrame(step);\n      }\n    };\n\n    this._animation = animation;\n    requestFrame(step);\n  } else {\n    this._setValue(value);\n  }\n}\n\nNativeReanimated.installCoreFunctions(NativeReanimated.native ? workletValueSetter : workletValueSetterJS);\nexport function makeMutable(value) {\n  checkPluginState();\n  return NativeReanimated.makeMutable(value);\n}\nexport function makeRemote(object = {}) {\n  checkPluginState();\n  return NativeReanimated.makeRemote(object);\n}\nexport function startMapper(mapper, inputs = [], outputs = []) {\n  checkPluginState();\n  return NativeReanimated.startMapper(mapper, inputs, outputs);\n}\nexport function stopMapper(mapperId) {\n  NativeReanimated.stopMapper(mapperId);\n}\nexport const runOnJS = fun => {\n  'worklet';\n\n  if (!_WORKLET) {\n    return fun;\n  }\n\n  if (!fun.__callAsync) {\n    throw new Error(\"Attempting to call runOnJS with an object that is not a host function. Using runOnJS is only possible with methods that are defined on the main React-Native Javascript thread and that aren't marked as worklets\");\n  } else {\n    return fun.__callAsync;\n  }\n};\nexport function createAnimatedPropAdapter(adapter, nativeProps) {\n  const nativePropsToAdd = {}; // eslint-disable-next-line no-unused-expressions\n\n  nativeProps?.forEach(prop => {\n    nativePropsToAdd[prop] = true;\n  });\n  addWhitelistedNativeProps(nativePropsToAdd);\n  return adapter;\n}\nconst capturableConsole = console;\nrunOnUI(() => {\n  'worklet';\n\n  const console = {\n    debug: runOnJS(capturableConsole.debug),\n    log: runOnJS(capturableConsole.log),\n    warn: runOnJS(capturableConsole.warn),\n    error: runOnJS(capturableConsole.error),\n    info: runOnJS(capturableConsole.info)\n  };\n\n  _setGlobalConsole(console);\n})();","map":{"version":3,"sources":["D:/dash_kol/my-app/node_modules/react-native-reanimated/src/reanimated2/core.js"],"names":["NativeReanimated","Platform","addWhitelistedNativeProps","global","__reanimatedWorkletInit","worklet","__worklet","_setGlobalConsole","undefined","checkPluginState","__workletHash","process","env","JEST_WORKER_ID","Error","_toArrayReanimated","object","Array","isArray","Symbol","iterator","Object","from","_mergeObjectsReanimated","assign","apply","arguments","_closure","closure","keys","forEach","key","pushFrame","frame","requestFrame","native","requestAnimationFrame","_WORKLET","_log","s","console","log","runOnUI","makeShareable","value","getViewProp","viewTag","propName","Promise","resolve","reject","result","substr","_getTimestamp","Date","now","_frameTimestamp","_eventTimestamp","_getCurrentTime","getTimestamp","OS","workletValueSetter","previousAnimation","_animation","cancelled","onFrame","animation","_value","current","isHigherOrder","initializeAnimation","timestamp","onStart","step","callback","finished","workletValueSetterJS","_setValue","installCoreFunctions","makeMutable","makeRemote","startMapper","mapper","inputs","outputs","stopMapper","mapperId","runOnJS","fun","__callAsync","createAnimatedPropAdapter","adapter","nativeProps","nativePropsToAdd","prop","capturableConsole","debug","warn","error","info"],"mappings":"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","sourcesContent":["/* global _WORKLET _getCurrentTime _frameTimestamp _eventTimestamp, _setGlobalConsole */\n\nimport NativeReanimated from './NativeReanimated';\nimport { Platform } from 'react-native';\nimport { addWhitelistedNativeProps } from '../ConfigHelper';\n\nglobal.__reanimatedWorkletInit = function (worklet) {\n  worklet.__worklet = true;\n};\n\nif (global._setGlobalConsole === undefined) {\n  // it can happen when Reanimated plugin wasn't added, but the user uses the only API from version 1\n  global._setGlobalConsole = () => {\n    // noop\n  };\n}\n\nexport const checkPluginState = () => {\n  if (\n    !(() => {\n      'worklet';\n    }).__workletHash &&\n    !process.env.JEST_WORKER_ID\n  ) {\n    throw new Error(\n      \"Reanimated 2 failed to create a worklet, maybe you forgot to add Reanimated's babel plugin?\"\n    );\n  }\n};\n\nfunction _toArrayReanimated(object) {\n  'worklet';\n  if (Array.isArray(object)) {\n    return object;\n  }\n  if (\n    typeof Symbol !== 'undefined' &&\n    (typeof Symbol === 'function' ? Symbol.iterator : '@@iterator') in\n      Object(object)\n  )\n    return Array.from(object);\n  throw new 'Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'();\n}\n\nfunction _mergeObjectsReanimated() {\n  'worklet';\n  return Object.assign.apply(null, arguments);\n}\n\nglobal.__reanimatedWorkletInit = function (worklet) {\n  worklet.__worklet = true;\n\n  if (worklet._closure) {\n    const closure = worklet._closure;\n    Object.keys(closure).forEach((key) => {\n      if (key === '_toConsumableArray') {\n        closure[key] = _toArrayReanimated;\n      }\n\n      if (key === '_objectSpread') {\n        closure[key] = _mergeObjectsReanimated;\n      }\n    });\n  }\n};\n\nfunction pushFrame(frame) {\n  NativeReanimated.pushFrame(frame);\n}\n\nexport function requestFrame(frame) {\n  'worklet';\n  if (NativeReanimated.native) {\n    requestAnimationFrame(frame);\n  } else {\n    pushFrame(frame);\n  }\n}\n\nglobal._WORKLET = false;\nglobal._log = function (s) {\n  console.log(s);\n};\n\nexport function runOnUI(worklet) {\n  return makeShareable(worklet);\n}\n\nexport function makeShareable(value) {\n  checkPluginState();\n  return NativeReanimated.makeShareable(value);\n}\n\nexport function getViewProp(viewTag, propName) {\n  return new Promise((resolve, reject) => {\n    return NativeReanimated.getViewProp(viewTag, propName, (result) => {\n      if (result.substr(0, 6) === 'error:') {\n        reject(result);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n}\n\nlet _getTimestamp;\nif (process.env.JEST_WORKER_ID) {\n  _getTimestamp = () => {\n    return Date.now();\n  };\n} else {\n  _getTimestamp = () => {\n    'worklet';\n    if (_frameTimestamp) {\n      return _frameTimestamp;\n    }\n    if (_eventTimestamp) {\n      return _eventTimestamp;\n    }\n    return _getCurrentTime();\n  };\n}\n\nexport function getTimestamp() {\n  'worklet';\n  if (Platform.OS === 'web') {\n    return NativeReanimated.getTimestamp();\n  }\n  return _getTimestamp();\n}\n\nfunction workletValueSetter(value) {\n  'worklet';\n  const previousAnimation = this._animation;\n  if (previousAnimation) {\n    previousAnimation.cancelled = true;\n    this._animation = null;\n  }\n  if (\n    typeof value === 'function' ||\n    (value !== null && typeof value === 'object' && value.onFrame)\n  ) {\n    const animation = typeof value === 'function' ? value() : value;\n    // prevent setting again to the same value\n    // and triggering the mappers that treat this value as an input\n    // this happens when the animation's target value(stored in animation.current until animation.onStart is called) is set to the same value as a current one(this._value)\n    // built in animations that are not higher order(withTiming, withSpring) hold target value in .current\n    if (this._value === animation.current && !animation.isHigherOrder) {\n      return;\n    }\n    // animated set\n    const initializeAnimation = (timestamp) => {\n      animation.onStart(animation, this.value, timestamp, previousAnimation);\n    };\n    initializeAnimation(getTimestamp());\n    const step = (timestamp) => {\n      if (animation.cancelled) {\n        animation.callback && animation.callback(false /* finished */);\n        return;\n      }\n      const finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      this._value = animation.current;\n      if (finished) {\n        animation.callback && animation.callback(true /* finished */);\n      } else {\n        requestAnimationFrame(step);\n      }\n    };\n\n    this._animation = animation;\n\n    if (_frameTimestamp) {\n      // frame\n      step(_frameTimestamp);\n    } else {\n      requestAnimationFrame(step);\n    }\n  } else {\n    // prevent setting again to the same value\n    // and triggering the mappers that treat this value as an input\n    if (this._value === value) {\n      return;\n    }\n    this._value = value;\n  }\n}\n\n// We cannot use pushFrame\n// so we use own implementation for js\nfunction workletValueSetterJS(value) {\n  const previousAnimation = this._animation;\n  if (previousAnimation) {\n    previousAnimation.cancelled = true;\n    this._animation = null;\n  }\n  if (\n    typeof value === 'function' ||\n    (value !== null && typeof value === 'object' && value.onFrame)\n  ) {\n    // animated set\n    const animation = typeof value === 'function' ? value() : value;\n    let initializeAnimation = (timestamp) => {\n      animation.onStart(animation, this.value, timestamp, previousAnimation);\n    };\n    const step = (timestamp) => {\n      if (animation.cancelled) {\n        animation.callback && animation.callback(false /* finished */);\n        return;\n      }\n      if (initializeAnimation) {\n        initializeAnimation(timestamp);\n        initializeAnimation = null; // prevent closure from keeping ref to previous animation\n      }\n      const finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      this._setValue(animation.current);\n      if (finished) {\n        animation.callback && animation.callback(true /* finished */);\n      } else {\n        requestFrame(step);\n      }\n    };\n\n    this._animation = animation;\n\n    requestFrame(step);\n  } else {\n    this._setValue(value);\n  }\n}\n\nNativeReanimated.installCoreFunctions(\n  NativeReanimated.native ? workletValueSetter : workletValueSetterJS\n);\n\nexport function makeMutable(value) {\n  checkPluginState();\n  return NativeReanimated.makeMutable(value);\n}\n\nexport function makeRemote(object = {}) {\n  checkPluginState();\n  return NativeReanimated.makeRemote(object);\n}\n\nexport function startMapper(mapper, inputs = [], outputs = []) {\n  checkPluginState();\n  return NativeReanimated.startMapper(mapper, inputs, outputs);\n}\n\nexport function stopMapper(mapperId) {\n  NativeReanimated.stopMapper(mapperId);\n}\n\nexport const runOnJS = (fun) => {\n  'worklet';\n  if (!_WORKLET) {\n    return fun;\n  }\n  if (!fun.__callAsync) {\n    throw new Error(\n      \"Attempting to call runOnJS with an object that is not a host function. Using runOnJS is only possible with methods that are defined on the main React-Native Javascript thread and that aren't marked as worklets\"\n    );\n  } else {\n    return fun.__callAsync;\n  }\n};\n\nexport function createAnimatedPropAdapter(adapter, nativeProps) {\n  const nativePropsToAdd = {};\n  // eslint-disable-next-line no-unused-expressions\n  nativeProps?.forEach((prop) => {\n    nativePropsToAdd[prop] = true;\n  });\n  addWhitelistedNativeProps(nativePropsToAdd);\n  return adapter;\n}\n\nconst capturableConsole = console;\nrunOnUI(() => {\n  'worklet';\n  const console = {\n    debug: runOnJS(capturableConsole.debug),\n    log: runOnJS(capturableConsole.log),\n    warn: runOnJS(capturableConsole.warn),\n    error: runOnJS(capturableConsole.error),\n    info: runOnJS(capturableConsole.info),\n  };\n  _setGlobalConsole(console);\n})();\n"]},"metadata":{},"sourceType":"module"}