{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport { DrawerLayoutAndroid as RNDrawerLayoutAndroid, FlatList as RNFlatList, Switch as RNSwitch, TextInput as RNTextInput, ScrollView as RNScrollView } from 'react-native';\nimport createNativeWrapper from '../handlers/createNativeWrapper';\nexport const ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: true\n});\nexport const Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true\n});\nexport const TextInput = createNativeWrapper(RNTextInput);\nexport const DrawerLayoutAndroid = createNativeWrapper(RNDrawerLayoutAndroid, {\n  disallowInterruption: true\n}); // @ts-ignore -- TODO(TS) to investigate if it's needed\n\nDrawerLayoutAndroid.positions = RNDrawerLayoutAndroid.positions;\nexport const FlatList = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(RNFlatList, _extends({\n  ref: ref\n}, props, {\n  renderScrollComponent: scrollProps => /*#__PURE__*/React.createElement(ScrollView, scrollProps)\n})));","map":{"version":3,"sources":["GestureComponents.web.tsx"],"names":["DrawerLayoutAndroid","FlatList","Switch","TextInput","ScrollView","createNativeWrapper","disallowInterruption","shouldCancelWhenOutside","shouldActivateOnStart","RNDrawerLayoutAndroid","ref","scrollProps"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SACEA,mBAAmB,IADrB,qBAAA,EAEEC,QAAQ,IAFV,UAAA,EAGEC,MAAM,IAHR,QAAA,EAIEC,SAAS,IAJX,WAAA,EAKEC,UAAU,IALZ,YAAA,QAAA,cAAA;AASA,OAAA,mBAAA,MAAA,iCAAA;AAEA,OAAO,MAAMA,UAAU,GAAGC,mBAAmB,CAAA,YAAA,EAAe;AAC1DC,EAAAA,oBAAoB,EAAE;AADoC,CAAf,CAAtC;AAIP,OAAO,MAAMJ,MAAM,GAAGG,mBAAmB,CAAA,QAAA,EAAW;AAClDE,EAAAA,uBAAuB,EAD2B,KAAA;AAElDC,EAAAA,qBAAqB,EAF6B,IAAA;AAGlDF,EAAAA,oBAAoB,EAAE;AAH4B,CAAX,CAAlC;AAKP,OAAO,MAAMH,SAAS,GAAGE,mBAAmB,CAArC,WAAqC,CAArC;AACP,OAAO,MAAML,mBAAmB,GAAGK,mBAAmB,CAAA,qBAAA,EAAwB;AAC5EC,EAAAA,oBAAoB,EAAE;AADsD,CAAxB,CAA/C,C,CAGP;;AACAN,mBAAmB,CAAnBA,SAAAA,GAAgCS,qBAAqB,CAArDT,SAAAA;AAEA,OAAO,MAAMC,QAAQ,GAAA,aAAG,KAAK,CAAL,UAAA,CACtB,CAAA,KAAA,EAAA,GAAA,KAAA,aACE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,QAAA,CAAA;AACE,EAAA,GAAG,EAAES;AADP,CAAA,EAAA,KAAA,EAAA;AAGE,EAAA,qBAAqB,EAAGC,WAAD,IAAA,aAAiB,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,WAAA;AAH1C,CAAA,CAAA,CAFoB,CAAjB","sourcesContent":["import * as React from 'react';\nimport {\n  DrawerLayoutAndroid as RNDrawerLayoutAndroid,\n  FlatList as RNFlatList,\n  Switch as RNSwitch,\n  TextInput as RNTextInput,\n  ScrollView as RNScrollView,\n  FlatListProps,\n} from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\n\nexport const ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: true,\n});\n\nexport const Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nexport const TextInput = createNativeWrapper(RNTextInput);\nexport const DrawerLayoutAndroid = createNativeWrapper(RNDrawerLayoutAndroid, {\n  disallowInterruption: true,\n});\n// @ts-ignore -- TODO(TS) to investigate if it's needed\nDrawerLayoutAndroid.positions = RNDrawerLayoutAndroid.positions;\n\nexport const FlatList = React.forwardRef(\n  <ItemT extends any>(props: FlatListProps<ItemT>, ref: any) => (\n    <RNFlatList\n      ref={ref}\n      {...props}\n      renderScrollComponent={(scrollProps) => <ScrollView {...scrollProps} />}\n    />\n  )\n);\n"]},"metadata":{},"sourceType":"module"}