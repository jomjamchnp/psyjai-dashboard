{"ast":null,"code":"import GestureHandler from './GestureHandler';\n/**\n * The base class for **Rotation** and **Pinch** gesture handlers.\n */\n\nclass IndiscreteGestureHandler extends GestureHandler {\n  get shouldEnableGestureOnSetup() {\n    return false;\n  }\n\n  updateGestureConfig({\n    minPointers = 2,\n    maxPointers = 2,\n    ...props\n  }) {\n    return super.updateGestureConfig({\n      minPointers,\n      maxPointers,\n      ...props\n    });\n  }\n\n  isGestureEnabledForEvent({\n    minPointers,\n    maxPointers\n  }, _recognizer, {\n    maxPointers: pointerLength\n  }) {\n    if (pointerLength > maxPointers) {\n      return {\n        failed: true\n      };\n    }\n\n    const validPointerCount = pointerLength >= minPointers;\n    return {\n      success: validPointerCount\n    };\n  }\n\n}\n\nexport default IndiscreteGestureHandler;","map":{"version":3,"sources":["IndiscreteGestureHandler.ts"],"names":["shouldEnableGestureOnSetup","updateGestureConfig","minPointers","maxPointers","props","isGestureEnabledForEvent","pointerLength","failed","validPointerCount","success"],"mappings":"AAAA,OAAA,cAAA,MAAA,kBAAA;AAEA;AACA;AACA;;AACA,MAAA,wBAAA,SAAA,cAAA,CAA+D;AAC/B,MAA1BA,0BAA0B,GAAG;AAC/B,WAAA,KAAA;AACD;;AAEDC,EAAAA,mBAAmB,CAAC;AAAEC,IAAAA,WAAW,GAAb,CAAA;AAAmBC,IAAAA,WAAW,GAA9B,CAAA;AAAoC,OAAGC;AAAvC,GAAD,EAAiD;AAClE,WAAO,MAAA,mBAAA,CAA0B;AAAA,MAAA,WAAA;AAAA,MAAA,WAAA;AAG/B,SAAGA;AAH4B,KAA1B,CAAP;AAKD;;AAEDC,EAAAA,wBAAwB,CACtB;AAAA,IAAA,WAAA;AAAeF,IAAAA;AAAf,GADsB,EAAA,WAAA,EAGtB;AAAEA,IAAAA,WAAW,EAAEG;AAAf,GAHsB,EAItB;AACA,QAAIA,aAAa,GAAjB,WAAA,EAAiC;AAC/B,aAAO;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAP;AACD;;AACD,UAAMC,iBAAiB,GAAGF,aAAa,IAAvC,WAAA;AACA,WAAO;AACLG,MAAAA,OAAO,EAAED;AADJ,KAAP;AAGD;;AAzB4D;;AA2B/D,eAAA,wBAAA","sourcesContent":["import GestureHandler from './GestureHandler';\n\n/**\n * The base class for **Rotation** and **Pinch** gesture handlers.\n */\nabstract class IndiscreteGestureHandler extends GestureHandler {\n  get shouldEnableGestureOnSetup() {\n    return false;\n  }\n\n  updateGestureConfig({ minPointers = 2, maxPointers = 2, ...props }) {\n    return super.updateGestureConfig({\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n\n  isGestureEnabledForEvent(\n    { minPointers, maxPointers }: any,\n    _recognizer: any,\n    { maxPointers: pointerLength }: any\n  ) {\n    if (pointerLength > maxPointers) {\n      return { failed: true };\n    }\n    const validPointerCount = pointerLength >= minPointers;\n    return {\n      success: validPointerCount,\n    };\n  }\n}\nexport default IndiscreteGestureHandler;\n"]},"metadata":{},"sourceType":"module"}