{"ast":null,"code":"import * as React from 'react';\nimport { Animated, View, StyleSheet, Platform } from 'react-native';\nimport HeaderBackButton from './HeaderBackButton';\nimport HeaderBackground from './HeaderBackground';\nimport HeaderShownContext from '../../utils/HeaderShownContext';\nimport memoize from '../../utils/memoize';\n\nconst warnIfHeaderStylesDefined = styles => {\n  Object.keys(styles).forEach(styleProp => {\n    const value = styles[styleProp];\n\n    if (styleProp === 'position' && value === 'absolute') {\n      console.warn(\"position: 'absolute' is not supported on headerStyle. If you would like to render content under the header, use the 'headerTransparent' navigationOption.\");\n    } else if (value !== undefined) {\n      console.warn(\"\".concat(styleProp, \" was given a value of \").concat(value, \", this has no effect on headerStyle.\"));\n    }\n  });\n};\n\nexport const getDefaultHeaderHeight = (layout, statusBarHeight) => {\n  const isLandscape = layout.width > layout.height;\n  let headerHeight;\n\n  if (Platform.OS === 'ios') {\n    if (isLandscape && !Platform.isPad) {\n      headerHeight = 32;\n    } else {\n      headerHeight = 44;\n    }\n  } else if (Platform.OS === 'android') {\n    headerHeight = 56;\n  } else {\n    headerHeight = 64;\n  }\n\n  return headerHeight + statusBarHeight;\n};\nexport default function HeaderSegment(props) {\n  const [leftLabelLayout, setLeftLabelLayout] = React.useState(undefined);\n  const [titleLayout, setTitleLayout] = React.useState(undefined);\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n\n  const handleTitleLayout = e => {\n    const {\n      height,\n      width\n    } = e.nativeEvent.layout;\n    setTitleLayout(titleLayout => {\n      if (titleLayout && height === titleLayout.height && width === titleLayout.width) {\n        return titleLayout;\n      }\n\n      return {\n        height,\n        width\n      };\n    });\n  };\n\n  const handleLeftLabelLayout = e => {\n    const {\n      height,\n      width\n    } = e.nativeEvent.layout;\n\n    if (leftLabelLayout && height === leftLabelLayout.height && width === leftLabelLayout.width) {\n      return;\n    }\n\n    setLeftLabelLayout({\n      height,\n      width\n    });\n  };\n\n  const getInterpolatedStyle = memoize((styleInterpolator, layout, current, next, titleLayout, leftLabelLayout, headerHeight) => styleInterpolator({\n    current: {\n      progress: current\n    },\n    next: next && {\n      progress: next\n    },\n    layouts: {\n      header: {\n        height: headerHeight,\n        width: layout.width\n      },\n      screen: layout,\n      title: titleLayout,\n      leftLabel: leftLabelLayout\n    }\n  }));\n  const {\n    scene,\n    layout,\n    insets,\n    title: currentTitle,\n    leftLabel: previousTitle,\n    onGoBack,\n    headerTitle,\n    headerTitleAlign = Platform.select({\n      ios: 'center',\n      default: 'left'\n    }),\n    headerLeft: left = onGoBack ? props => /*#__PURE__*/React.createElement(HeaderBackButton, props) : undefined,\n    headerTransparent,\n    headerTintColor,\n    headerBackground,\n    headerRight: right,\n    headerBackImage: backImage,\n    headerBackTitle: leftLabel,\n    headerBackTitleVisible,\n    headerTruncatedBackTitle: truncatedLabel,\n    headerPressColorAndroid: pressColorAndroid,\n    headerBackAccessibilityLabel: backAccessibilityLabel,\n    headerBackAllowFontScaling: backAllowFontScaling,\n    headerTitleAllowFontScaling: titleAllowFontScaling,\n    headerTitleStyle: customTitleStyle,\n    headerBackTitleStyle: customLeftLabelStyle,\n    headerLeftContainerStyle: leftContainerStyle,\n    headerRightContainerStyle: rightContainerStyle,\n    headerTitleContainerStyle: titleContainerStyle,\n    headerStyle: customHeaderStyle,\n    headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n    styleInterpolator\n  } = props;\n  const defaultHeight = getDefaultHeaderHeight(layout, headerStatusBarHeight);\n  const {\n    height = defaultHeight,\n    minHeight,\n    maxHeight,\n    backgroundColor,\n    borderBottomColor,\n    borderBottomEndRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n    borderBottomStartRadius,\n    borderBottomWidth,\n    borderColor,\n    borderEndColor,\n    borderEndWidth,\n    borderLeftColor,\n    borderLeftWidth,\n    borderRadius,\n    borderRightColor,\n    borderRightWidth,\n    borderStartColor,\n    borderStartWidth,\n    borderStyle,\n    borderTopColor,\n    borderTopEndRadius,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderTopStartRadius,\n    borderTopWidth,\n    borderWidth,\n    // @ts-expect-error: web support for shadow\n    boxShadow,\n    elevation,\n    shadowColor,\n    shadowOffset,\n    shadowOpacity,\n    shadowRadius,\n    opacity,\n    transform,\n    ...unsafeStyles\n  } = StyleSheet.flatten(customHeaderStyle || {});\n\n  if (process.env.NODE_ENV !== 'production') {\n    warnIfHeaderStylesDefined(unsafeStyles);\n  }\n\n  const safeStyles = {\n    backgroundColor,\n    borderBottomColor,\n    borderBottomEndRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n    borderBottomStartRadius,\n    borderBottomWidth,\n    borderColor,\n    borderEndColor,\n    borderEndWidth,\n    borderLeftColor,\n    borderLeftWidth,\n    borderRadius,\n    borderRightColor,\n    borderRightWidth,\n    borderStartColor,\n    borderStartWidth,\n    borderStyle,\n    borderTopColor,\n    borderTopEndRadius,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderTopStartRadius,\n    borderTopWidth,\n    borderWidth,\n    // @ts-expect-error: boxShadow is only for Web\n    boxShadow,\n    elevation,\n    shadowColor,\n    shadowOffset,\n    shadowOpacity,\n    shadowRadius,\n    opacity,\n    transform\n  }; // Setting a property to undefined triggers default style\n  // So we need to filter them out\n  // Users can use `null` instead\n\n  for (const styleProp in safeStyles) {\n    // @ts-expect-error: typescript wrongly complains that styleProp cannot be used to index safeStyles\n    if (safeStyles[styleProp] === undefined) {\n      // @ts-expect-error\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete safeStyles[styleProp];\n    }\n  }\n\n  const {\n    titleStyle,\n    leftButtonStyle,\n    leftLabelStyle,\n    rightButtonStyle,\n    backgroundStyle\n  } = getInterpolatedStyle(styleInterpolator, layout, scene.progress.current, scene.progress.next, titleLayout, previousTitle ? leftLabelLayout : undefined, typeof height === 'number' ? height : defaultHeight);\n  const leftButton = left ? left({\n    backImage,\n    pressColorAndroid,\n    accessibilityLabel: backAccessibilityLabel,\n    allowFontScaling: backAllowFontScaling,\n    onPress: onGoBack,\n    labelVisible: headerBackTitleVisible,\n    label: leftLabel !== undefined ? leftLabel : previousTitle,\n    truncatedLabel,\n    labelStyle: [leftLabelStyle, customLeftLabelStyle],\n    onLabelLayout: handleLeftLabelLayout,\n    screenLayout: layout,\n    titleLayout,\n    tintColor: headerTintColor,\n    canGoBack: Boolean(onGoBack)\n  }) : null;\n  const rightButton = right ? right({\n    tintColor: headerTintColor\n  }) : null;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Animated.View, {\n    pointerEvents: \"box-none\",\n    style: [StyleSheet.absoluteFill, {\n      zIndex: 0\n    }, backgroundStyle]\n  }, headerBackground ? headerBackground({\n    style: safeStyles\n  }) : headerTransparent ? null : /*#__PURE__*/React.createElement(HeaderBackground, {\n    style: safeStyles\n  })), /*#__PURE__*/React.createElement(Animated.View, {\n    pointerEvents: \"box-none\",\n    style: [{\n      height,\n      minHeight,\n      maxHeight,\n      opacity,\n      transform\n    }]\n  }, /*#__PURE__*/React.createElement(View, {\n    pointerEvents: \"none\",\n    style: {\n      height: headerStatusBarHeight\n    }\n  }), /*#__PURE__*/React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: styles.content\n  }, leftButton ? /*#__PURE__*/React.createElement(Animated.View, {\n    pointerEvents: \"box-none\",\n    style: [styles.left, {\n      left: insets.left\n    }, leftButtonStyle, leftContainerStyle]\n  }, leftButton) : null, /*#__PURE__*/React.createElement(Animated.View, {\n    pointerEvents: \"box-none\",\n    style: [headerTitleAlign === 'left' ? {\n      position: 'absolute',\n      left: (leftButton ? 72 : 16) + insets.left,\n      right: (rightButton ? 72 : 16) + insets.right\n    } : {\n      marginHorizontal: (leftButton ? 32 : 16) + (leftButton && headerBackTitleVisible !== false ? 40 : 0) + Math.max(insets.left, insets.right)\n    }, titleStyle, titleContainerStyle]\n  }, headerTitle({\n    children: currentTitle,\n    onLayout: handleTitleLayout,\n    allowFontScaling: titleAllowFontScaling,\n    tintColor: headerTintColor,\n    style: customTitleStyle\n  })), rightButton ? /*#__PURE__*/React.createElement(Animated.View, {\n    pointerEvents: \"box-none\",\n    style: [styles.right, {\n      right: insets.right\n    }, rightButtonStyle, rightContainerStyle]\n  }, rightButton) : null)));\n}\nconst styles = StyleSheet.create({\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  left: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  right: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-end'\n  }\n});","map":{"version":3,"sources":["HeaderSegment.tsx"],"names":["warnIfHeaderStylesDefined","styles","Object","styleProp","value","console","getDefaultHeaderHeight","isLandscape","layout","Platform","headerHeight","React","isParentHeaderShown","handleTitleLayout","e","width","setTitleLayout","titleLayout","height","handleLeftLabelLayout","leftLabelLayout","setLeftLabelLayout","getInterpolatedStyle","memoize","styleInterpolator","current","progress","next","layouts","header","screen","title","leftLabel","headerTitleAlign","ios","default","headerLeft","left","onGoBack","props","headerRight","headerBackImage","headerBackTitle","headerTruncatedBackTitle","headerPressColorAndroid","headerBackAccessibilityLabel","headerBackAllowFontScaling","headerTitleAllowFontScaling","headerTitleStyle","headerBackTitleStyle","headerLeftContainerStyle","headerRightContainerStyle","headerTitleContainerStyle","headerStyle","headerStatusBarHeight","insets","defaultHeight","unsafeStyles","StyleSheet","customHeaderStyle","process","safeStyles","transform","backgroundStyle","scene","previousTitle","leftButton","accessibilityLabel","allowFontScaling","onPress","labelVisible","label","labelStyle","onLabelLayout","screenLayout","tintColor","canGoBack","Boolean","rightButton","right","headerTintColor","zIndex","headerBackground","style","headerTransparent","content","position","marginHorizontal","headerBackTitleVisible","Math","headerTitle","children","onLayout","customTitleStyle","flex","flexDirection","alignItems","justifyContent","top","bottom"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  StyleSheet,\n  LayoutChangeEvent,\n  Platform,\n  ViewStyle,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\nimport type { Route } from '@react-navigation/native';\nimport HeaderBackButton from './HeaderBackButton';\nimport HeaderBackground from './HeaderBackground';\nimport HeaderShownContext from '../../utils/HeaderShownContext';\nimport memoize from '../../utils/memoize';\nimport type {\n  Layout,\n  StackHeaderStyleInterpolator,\n  StackHeaderLeftButtonProps,\n  StackHeaderTitleProps,\n  StackHeaderOptions,\n  Scene,\n} from '../../types';\n\ntype Props = StackHeaderOptions & {\n  headerTitle: (props: StackHeaderTitleProps) => React.ReactNode;\n  layout: Layout;\n  insets: EdgeInsets;\n  onGoBack?: () => void;\n  title?: string;\n  leftLabel?: string;\n  scene: Scene<Route<string>>;\n  styleInterpolator: StackHeaderStyleInterpolator;\n};\n\nconst warnIfHeaderStylesDefined = (styles: Record<string, any>) => {\n  Object.keys(styles).forEach((styleProp) => {\n    const value = styles[styleProp];\n\n    if (styleProp === 'position' && value === 'absolute') {\n      console.warn(\n        \"position: 'absolute' is not supported on headerStyle. If you would like to render content under the header, use the 'headerTransparent' navigationOption.\"\n      );\n    } else if (value !== undefined) {\n      console.warn(\n        `${styleProp} was given a value of ${value}, this has no effect on headerStyle.`\n      );\n    }\n  });\n};\n\nexport const getDefaultHeaderHeight = (\n  layout: Layout,\n  statusBarHeight: number\n): number => {\n  const isLandscape = layout.width > layout.height;\n\n  let headerHeight;\n\n  if (Platform.OS === 'ios') {\n    if (isLandscape && !Platform.isPad) {\n      headerHeight = 32;\n    } else {\n      headerHeight = 44;\n    }\n  } else if (Platform.OS === 'android') {\n    headerHeight = 56;\n  } else {\n    headerHeight = 64;\n  }\n\n  return headerHeight + statusBarHeight;\n};\n\nexport default function HeaderSegment(props: Props) {\n  const [leftLabelLayout, setLeftLabelLayout] = React.useState<\n    Layout | undefined\n  >(undefined);\n\n  const [titleLayout, setTitleLayout] = React.useState<Layout | undefined>(\n    undefined\n  );\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n\n  const handleTitleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    setTitleLayout((titleLayout) => {\n      if (\n        titleLayout &&\n        height === titleLayout.height &&\n        width === titleLayout.width\n      ) {\n        return titleLayout;\n      }\n\n      return { height, width };\n    });\n  };\n\n  const handleLeftLabelLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    if (\n      leftLabelLayout &&\n      height === leftLabelLayout.height &&\n      width === leftLabelLayout.width\n    ) {\n      return;\n    }\n\n    setLeftLabelLayout({ height, width });\n  };\n\n  const getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackHeaderStyleInterpolator,\n      layout: Layout,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      titleLayout: Layout | undefined,\n      leftLabelLayout: Layout | undefined,\n      headerHeight: number\n    ) =>\n      styleInterpolator({\n        current: { progress: current },\n        next: next && { progress: next },\n        layouts: {\n          header: {\n            height: headerHeight,\n            width: layout.width,\n          },\n          screen: layout,\n          title: titleLayout,\n          leftLabel: leftLabelLayout,\n        },\n      })\n  );\n\n  const {\n    scene,\n    layout,\n    insets,\n    title: currentTitle,\n    leftLabel: previousTitle,\n    onGoBack,\n    headerTitle,\n    headerTitleAlign = Platform.select({\n      ios: 'center',\n      default: 'left',\n    }),\n    headerLeft: left = onGoBack\n      ? (props: StackHeaderLeftButtonProps) => <HeaderBackButton {...props} />\n      : undefined,\n    headerTransparent,\n    headerTintColor,\n    headerBackground,\n    headerRight: right,\n    headerBackImage: backImage,\n    headerBackTitle: leftLabel,\n    headerBackTitleVisible,\n    headerTruncatedBackTitle: truncatedLabel,\n    headerPressColorAndroid: pressColorAndroid,\n    headerBackAccessibilityLabel: backAccessibilityLabel,\n    headerBackAllowFontScaling: backAllowFontScaling,\n    headerTitleAllowFontScaling: titleAllowFontScaling,\n    headerTitleStyle: customTitleStyle,\n    headerBackTitleStyle: customLeftLabelStyle,\n    headerLeftContainerStyle: leftContainerStyle,\n    headerRightContainerStyle: rightContainerStyle,\n    headerTitleContainerStyle: titleContainerStyle,\n    headerStyle: customHeaderStyle,\n    headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n    styleInterpolator,\n  } = props;\n\n  const defaultHeight = getDefaultHeaderHeight(layout, headerStatusBarHeight);\n\n  const {\n    height = defaultHeight,\n    minHeight,\n    maxHeight,\n    backgroundColor,\n    borderBottomColor,\n    borderBottomEndRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n    borderBottomStartRadius,\n    borderBottomWidth,\n    borderColor,\n    borderEndColor,\n    borderEndWidth,\n    borderLeftColor,\n    borderLeftWidth,\n    borderRadius,\n    borderRightColor,\n    borderRightWidth,\n    borderStartColor,\n    borderStartWidth,\n    borderStyle,\n    borderTopColor,\n    borderTopEndRadius,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderTopStartRadius,\n    borderTopWidth,\n    borderWidth,\n    // @ts-expect-error: web support for shadow\n    boxShadow,\n    elevation,\n    shadowColor,\n    shadowOffset,\n    shadowOpacity,\n    shadowRadius,\n    opacity,\n    transform,\n    ...unsafeStyles\n  } = StyleSheet.flatten(customHeaderStyle || {}) as ViewStyle;\n\n  if (process.env.NODE_ENV !== 'production') {\n    warnIfHeaderStylesDefined(unsafeStyles);\n  }\n\n  const safeStyles: ViewStyle = {\n    backgroundColor,\n    borderBottomColor,\n    borderBottomEndRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n    borderBottomStartRadius,\n    borderBottomWidth,\n    borderColor,\n    borderEndColor,\n    borderEndWidth,\n    borderLeftColor,\n    borderLeftWidth,\n    borderRadius,\n    borderRightColor,\n    borderRightWidth,\n    borderStartColor,\n    borderStartWidth,\n    borderStyle,\n    borderTopColor,\n    borderTopEndRadius,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderTopStartRadius,\n    borderTopWidth,\n    borderWidth,\n    // @ts-expect-error: boxShadow is only for Web\n    boxShadow,\n    elevation,\n    shadowColor,\n    shadowOffset,\n    shadowOpacity,\n    shadowRadius,\n    opacity,\n    transform,\n  };\n\n  // Setting a property to undefined triggers default style\n  // So we need to filter them out\n  // Users can use `null` instead\n  for (const styleProp in safeStyles) {\n    // @ts-expect-error: typescript wrongly complains that styleProp cannot be used to index safeStyles\n    if (safeStyles[styleProp] === undefined) {\n      // @ts-expect-error\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete safeStyles[styleProp];\n    }\n  }\n\n  const {\n    titleStyle,\n    leftButtonStyle,\n    leftLabelStyle,\n    rightButtonStyle,\n    backgroundStyle,\n  } = getInterpolatedStyle(\n    styleInterpolator,\n    layout,\n    scene.progress.current,\n    scene.progress.next,\n    titleLayout,\n    previousTitle ? leftLabelLayout : undefined,\n    typeof height === 'number' ? height : defaultHeight\n  );\n\n  const leftButton = left\n    ? left({\n        backImage,\n        pressColorAndroid,\n        accessibilityLabel: backAccessibilityLabel,\n        allowFontScaling: backAllowFontScaling,\n        onPress: onGoBack,\n        labelVisible: headerBackTitleVisible,\n        label: leftLabel !== undefined ? leftLabel : previousTitle,\n        truncatedLabel,\n        labelStyle: [leftLabelStyle, customLeftLabelStyle],\n        onLabelLayout: handleLeftLabelLayout,\n        screenLayout: layout,\n        titleLayout,\n        tintColor: headerTintColor,\n        canGoBack: Boolean(onGoBack),\n      })\n    : null;\n\n  const rightButton = right ? right({ tintColor: headerTintColor }) : null;\n\n  return (\n    <React.Fragment>\n      <Animated.View\n        pointerEvents=\"box-none\"\n        style={[StyleSheet.absoluteFill, { zIndex: 0 }, backgroundStyle]}\n      >\n        {headerBackground ? (\n          headerBackground({ style: safeStyles })\n        ) : headerTransparent ? null : (\n          <HeaderBackground style={safeStyles} />\n        )}\n      </Animated.View>\n      <Animated.View\n        pointerEvents=\"box-none\"\n        style={[{ height, minHeight, maxHeight, opacity, transform }]}\n      >\n        <View pointerEvents=\"none\" style={{ height: headerStatusBarHeight }} />\n        <View pointerEvents=\"box-none\" style={styles.content}>\n          {leftButton ? (\n            <Animated.View\n              pointerEvents=\"box-none\"\n              style={[\n                styles.left,\n                { left: insets.left },\n                leftButtonStyle,\n                leftContainerStyle,\n              ]}\n            >\n              {leftButton}\n            </Animated.View>\n          ) : null}\n          <Animated.View\n            pointerEvents=\"box-none\"\n            style={[\n              headerTitleAlign === 'left'\n                ? {\n                    position: 'absolute',\n                    left: (leftButton ? 72 : 16) + insets.left,\n                    right: (rightButton ? 72 : 16) + insets.right,\n                  }\n                : {\n                    marginHorizontal:\n                      (leftButton ? 32 : 16) +\n                      (leftButton && headerBackTitleVisible !== false\n                        ? 40\n                        : 0) +\n                      Math.max(insets.left, insets.right),\n                  },\n              titleStyle,\n              titleContainerStyle,\n            ]}\n          >\n            {headerTitle({\n              children: currentTitle,\n              onLayout: handleTitleLayout,\n              allowFontScaling: titleAllowFontScaling,\n              tintColor: headerTintColor,\n              style: customTitleStyle,\n            })}\n          </Animated.View>\n          {rightButton ? (\n            <Animated.View\n              pointerEvents=\"box-none\"\n              style={[\n                styles.right,\n                { right: insets.right },\n                rightButtonStyle,\n                rightContainerStyle,\n              ]}\n            >\n              {rightButton}\n            </Animated.View>\n          ) : null}\n        </View>\n      </Animated.View>\n    </React.Fragment>\n  );\n}\n\nconst styles = StyleSheet.create({\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  left: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  right: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}