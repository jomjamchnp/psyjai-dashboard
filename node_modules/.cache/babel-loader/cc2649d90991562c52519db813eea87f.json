{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { Animated, Easing, StyleSheet, View } from 'react-native';\nimport GenericTouchable, { TOUCHABLE_STATE } from './GenericTouchable';\nimport * as React from 'react';\nimport { Component } from 'react';\n/**\n * TouchableOpacity bases on timing animation which has been used in RN's core\n */\n\nexport default class TouchableOpacity extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"getChildStyleOpacityWithDefault\", () => {\n      const childStyle = StyleSheet.flatten(this.props.style) || {};\n      return childStyle.opacity == null ? 1 : childStyle.opacity;\n    });\n\n    _defineProperty(this, \"opacity\", new Animated.Value(this.getChildStyleOpacityWithDefault()));\n\n    _defineProperty(this, \"setOpacityTo\", (value, duration) => {\n      Animated.timing(this.opacity, {\n        toValue: value,\n        duration: duration,\n        easing: Easing.inOut(Easing.quad),\n        useNativeDriver: true\n      }).start();\n    });\n\n    _defineProperty(this, \"onStateChange\", (_from, to) => {\n      if (to === TOUCHABLE_STATE.BEGAN) {\n        this.setOpacityTo(this.props.activeOpacity, 0);\n      } else if (to === TOUCHABLE_STATE.UNDETERMINED || to === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n        this.setOpacityTo(this.getChildStyleOpacityWithDefault(), 150);\n      }\n    });\n  }\n\n  render() {\n    const {\n      style = {},\n      ...rest\n    } = this.props;\n    return /*#__PURE__*/React.createElement(GenericTouchable, _extends({}, rest, {\n      style: [style, {\n        opacity: this.opacity // TODO: fix this\n\n      }],\n      onStateChange: this.onStateChange\n    }), this.props.children ? this.props.children : /*#__PURE__*/React.createElement(View, null));\n  }\n\n}\n\n_defineProperty(TouchableOpacity, \"defaultProps\", { ...GenericTouchable.defaultProps,\n  activeOpacity: 0.2\n});","map":{"version":3,"sources":["TouchableOpacity.tsx"],"names":["TouchableOpacity","GenericTouchable","activeOpacity","childStyle","StyleSheet","Animated","toValue","duration","easing","Easing","useNativeDriver","to","TOUCHABLE_STATE","render","style","rest","opacity","onStateChange"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,QAAA,EAAA,MAAA,EAAA,UAAA,EAAA,IAAA,QAAA,cAAA;AAOA,OAAA,gBAAA,IAAA,eAAA,QAAA,oBAAA;AAIA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,SAAA,QAAA,OAAA;AAEA;AACA;AACA;;AACA,eAAe,MAAA,gBAAA,SAAA,SAAA,CAEb;AAAA,EAAA,WAAA,CAAA,GAAA,IAAA,EAAA;AAAA,UAAA,GAAA,IAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,iCAAA,EAOkC,MAAM;AACtC,YAAMG,UAAU,GAAGC,UAAU,CAAVA,OAAAA,CAAmB,KAAA,KAAA,CAAnBA,KAAAA,KAAnB,EAAA;AACA,aAAOD,UAAU,CAAVA,OAAAA,IAAAA,IAAAA,GAAAA,CAAAA,GAAiCA,UAAU,CAAlD,OAAA;AATF,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,SAAA,EAYU,IAAIE,QAAQ,CAAZ,KAAA,CAAmB,KAZ7B,+BAY6B,EAAnB,CAZV,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,cAAA,EAce,CAAA,KAAA,EAAA,QAAA,KAAqC;AAClDA,MAAAA,QAAQ,CAARA,MAAAA,CAAgB,KAAhBA,OAAAA,EAA8B;AAC5BC,QAAAA,OAAO,EADqB,KAAA;AAE5BC,QAAAA,QAAQ,EAFoB,QAAA;AAG5BC,QAAAA,MAAM,EAAEC,MAAM,CAANA,KAAAA,CAAaA,MAAM,CAHC,IAGpBA,CAHoB;AAI5BC,QAAAA,eAAe,EAAE;AAJW,OAA9BL,EAAAA,KAAAA;AAfF,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,eAAA,EAuBgB,CAAA,KAAA,EAAA,EAAA,KAA+B;AAC7C,UAAIM,EAAE,KAAKC,eAAe,CAA1B,KAAA,EAAkC;AAChC,aAAA,YAAA,CAAkB,KAAA,KAAA,CAAlB,aAAA,EAAA,CAAA;AADF,OAAA,MAEO,IACLD,EAAE,KAAKC,eAAe,CAAtBD,YAAAA,IACAA,EAAE,KAAKC,eAAe,CAFjB,aAAA,EAGL;AACA,aAAA,YAAA,CAAkB,KAAlB,+BAAkB,EAAlB,EAAA,GAAA;AACD;AA/BH,KAAA,CAAA;AAAA;;AAkCAC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAK,GAAP,EAAA;AAAc,SAAGC;AAAjB,QAA0B,KAAhC,KAAA;AACA,WAAA,aACE,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,MAAA,KAAK,EAAE,CAAA,KAAA,EAEL;AACEC,QAAAA,OAAO,EAAG,KADZ,OAAA,CACgD;;AADhD,OAFK,CAFT;AAQE,MAAA,aAAa,EAAE,KAAKC;AARtB,KAAA,CAAA,EASG,KAAA,KAAA,CAAA,QAAA,GAAsB,KAAA,KAAA,CAAtB,QAAA,GAAA,aAA4C,KAAA,CAAA,aAAA,CAAA,IAAA,EAVjD,IAUiD,CAT/C,CADF;AAaD;;AAjDD;;gBAFmBjB,gB,kBAGG,EACpB,GAAGC,gBAAgB,CADC,YAAA;AAEpBC,EAAAA,aAAa,EAAE;AAFK,C","sourcesContent":["import {\n  Animated,\n  Easing,\n  StyleSheet,\n  View,\n  TouchableOpacityProps,\n} from 'react-native';\nimport GenericTouchable, {\n  TOUCHABLE_STATE,\n  GenericTouchableProps,\n} from './GenericTouchable';\nimport * as React from 'react';\nimport { Component } from 'react';\n\n/**\n * TouchableOpacity bases on timing animation which has been used in RN's core\n */\nexport default class TouchableOpacity extends Component<\n  TouchableOpacityProps & GenericTouchableProps\n> {\n  static defaultProps = {\n    ...GenericTouchable.defaultProps,\n    activeOpacity: 0.2,\n  };\n\n  // opacity is 1 one by default but could be overwritten\n  getChildStyleOpacityWithDefault = () => {\n    const childStyle = StyleSheet.flatten(this.props.style) || {};\n    return childStyle.opacity == null ? 1 : childStyle.opacity;\n  };\n\n  opacity = new Animated.Value(this.getChildStyleOpacityWithDefault());\n\n  setOpacityTo = (value: number, duration: number) => {\n    Animated.timing(this.opacity, {\n      toValue: value,\n      duration: duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: true,\n    }).start();\n  };\n\n  onStateChange = (_from: number, to: number) => {\n    if (to === TOUCHABLE_STATE.BEGAN) {\n      this.setOpacityTo(this.props.activeOpacity!, 0);\n    } else if (\n      to === TOUCHABLE_STATE.UNDETERMINED ||\n      to === TOUCHABLE_STATE.MOVED_OUTSIDE\n    ) {\n      this.setOpacityTo(this.getChildStyleOpacityWithDefault(), 150);\n    }\n  };\n\n  render() {\n    const { style = {}, ...rest } = this.props;\n    return (\n      <GenericTouchable\n        {...rest}\n        style={[\n          style,\n          {\n            opacity: (this.opacity as unknown) as number, // TODO: fix this\n          },\n        ]}\n        onStateChange={this.onStateChange}>\n        {this.props.children ? this.props.children : <View />}\n      </GenericTouchable>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}