{"ast":null,"code":"var _jsxFileName = \"D:\\\\dash_kol\\\\my-app\\\\src\\\\page\\\\signup.js\";\nimport React, { Component } from 'react';\nimport { StyleSheet, Text, View, TextInput, Button, Alert, ActivityIndicator } from 'react-native';\nimport firebase from '../firebasedb/firebaseconfig';\nimport { useHistory } from \"react-router-dom\";\nimport Login from '../page/login';\nimport { Col, Form, Card } from 'react-bootstrap';\nimport { history } from '../history';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Signup extends Component {\n  constructor() {\n    super();\n\n    this.updateInputVal = (val, prop) => {\n      const state = this.state;\n      state[prop] = val;\n      this.setState(state);\n    };\n\n    this.registerUser = () => {\n      if (this.state.email === '' && this.state.password === '') {\n        Alert.alert('Enter details to signup!');\n      } else {\n        this.setState({\n          isLoading: true\n        });\n        firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then(res => {\n          res.user.updateProfile({\n            FirstName: this.state.FirstName,\n            LastName: this.state.LastName\n          });\n          console.log('User registered successfully!');\n          this.setState({\n            isLoading: false,\n            FirstName: '',\n            LastName: '',\n            email: '',\n            password: ''\n          });\n          history.push('/login');\n        }).catch(error => this.setState({\n          errorMessage: error.message\n        }));\n      }\n    };\n\n    this.state = {\n      FirstName: '',\n      LastName: '',\n      email: '',\n      password: '',\n      isLoading: false\n    };\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return /*#__PURE__*/_jsxDEV(View, {\n        style: styles.preloader,\n        children: /*#__PURE__*/_jsxDEV(ActivityIndicator, {\n          size: \"large\",\n          color: \"#9E9E9E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"bg\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        id: \"login\",\n        style: {\n          width: '30em'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"First name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"First name\",\n              onChange: e => {\n                this.updateInputVal(e.target.value, 'FirstName');\n                this.setState({\n                  FirstName: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Last name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Last name\" //value={e.target.value}\n              ,\n              onChangeText: val => this.updateInputVal(val, 'email') // onChange={e => {\n              //   this.updateInputVal(e.target.value, 'LastName')\n              //   this.setState({\n              //     LastName : e.target.value\n              //   })\n              // }}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              placeholder: \"Enter email\",\n              onChange: e => {\n                this.updateInputVal(e.target.value, 'email');\n                this.setState({\n                  email: e.target.value\n                });\n              } // value={this.state.email}\n              // onChangeText={(val) => this.updateInputVal(val, 'email')}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              placeholder: \"Enter password\",\n              onChange: e => {\n                this.updateInputVal(e.target.value, 'password');\n                this.setState({\n                  password: e.target.value\n                });\n              } // value={this.state.password}\n              // onChangeText={(val) => this.updateInputVal(val, 'password')}\n              ,\n              maxLength: 15,\n              secureTextEntry: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary btn-block\",\n            onPress: () => this.registerUser(),\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this) // <View style={styles.container}>  \n    //   <TextInput\n    //     style={styles.inputStyle}\n    //     placeholder=\"Name\"\n    //     value={this.state.displayName}\n    //     onChangeText={(val) => this.updateInputVal(val, 'displayName')}\n    //   />      \n    //   <TextInput\n    //     style={styles.inputStyle}\n    //     placeholder=\"Email\"\n    //     value={this.state.email}\n    //     onChangeText={(val) => this.updateInputVal(val, 'email')}\n    //   />\n    //   <TextInput\n    //     style={styles.inputStyle}\n    //     placeholder=\"Password\"\n    //     value={this.state.password}\n    //     onChangeText={(val) => this.updateInputVal(val, 'password')}\n    //     maxLength={15}\n    //     secureTextEntry={true}\n    //   />   \n    //   <Button\n    //     color=\"#3740FE\"\n    //     title=\"Signup\"\n    //     onPress={() => this.registerUser()}\n    //   />\n    //   <Text \n    //     style={styles.loginText}\n    //     onPress={() => this.props.navigation.navigate('Login')}>\n    //     Already Registered? Click here to login\n    //   </Text>                          \n    // </View>\n    ;\n  }\n\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    padding: 35,\n    backgroundColor: '#fff'\n  },\n  inputStyle: {\n    width: '100%',\n    marginBottom: 15,\n    paddingBottom: 15,\n    alignSelf: \"center\",\n    borderColor: \"#ccc\",\n    borderBottomWidth: 1\n  },\n  loginText: {\n    color: '#3740FE',\n    marginTop: 25,\n    textAlign: 'center'\n  },\n  preloader: {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  }\n});","map":{"version":3,"sources":["D:/dash_kol/my-app/src/page/signup.js"],"names":["React","Component","StyleSheet","Text","View","TextInput","Button","Alert","ActivityIndicator","firebase","useHistory","Login","Col","Form","Card","history","Signup","constructor","updateInputVal","val","prop","state","setState","registerUser","email","password","alert","isLoading","auth","createUserWithEmailAndPassword","then","res","user","updateProfile","FirstName","LastName","console","log","push","catch","error","errorMessage","message","render","styles","preloader","width","e","target","value","create","container","flex","display","flexDirection","justifyContent","padding","backgroundColor","inputStyle","marginBottom","paddingBottom","alignSelf","borderColor","borderBottomWidth","loginText","color","marginTop","textAlign","left","right","top","bottom","position","alignItems"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Button, Alert, ActivityIndicator } from 'react-native';\r\nimport firebase from '../firebasedb/firebaseconfig';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Login from '../page/login';\r\nimport { Col,Form,Card} from 'react-bootstrap';\r\nimport { history } from '../history';\r\n\r\nexport default class Signup extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { \r\n      FirstName: '',\r\n      LastName: '',\r\n      email: '', \r\n      password: '',\r\n      isLoading: false\r\n    }\r\n  }\r\n\r\n  updateInputVal = (val, prop) => {\r\n    const state = this.state;\r\n    state[prop] = val;\r\n    this.setState(state);\r\n  }\r\n\r\n  registerUser = () => {\r\n    if(this.state.email === '' && this.state.password === '') {\r\n      Alert.alert('Enter details to signup!')\r\n    } else {\r\n      this.setState({\r\n        isLoading: true,\r\n      })\r\n      firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then((res) => {\r\n        res.user.updateProfile({\r\n          FirstName: this.state.FirstName,\r\n          LastName : this.state.LastName\r\n        })\r\n        console.log('User registered successfully!')\r\n        this.setState({\r\n          isLoading: false,\r\n          FirstName: '',\r\n          LastName: '',\r\n          email: '', \r\n          password: ''\r\n        })\r\n        history.push('/login')\r\n      })\r\n      .catch(error => this.setState({ errorMessage: error.message }))      \r\n    }\r\n  }\r\n\r\n  render() {\r\n    if(this.state.isLoading){\r\n      return(\r\n        <View style={styles.preloader}>\r\n          <ActivityIndicator size=\"large\" color=\"#9E9E9E\"/>\r\n        </View>\r\n      )\r\n    }    \r\n    return (\r\n      <div class=\"bg\">\r\n      <Card id=\"login\" style={{width:'30em'}}>\r\n      <form>\r\n                <h3>Sign Up</h3>\r\n                <div className=\"form-group\">\r\n                    <label>First name</label>\r\n                    <input type=\"text\" \r\n                      className=\"form-control\" \r\n                      placeholder=\"First name\"\r\n                      \r\n                      onChange={e => {\r\n                        this.updateInputVal(e.target.value, 'FirstName')\r\n                        this.setState({\r\n                          FirstName : e.target.value\r\n                        })\r\n                      }}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Last name</label>\r\n                    <input \r\n                      type=\"text\" \r\n                      className=\"form-control\" \r\n                      placeholder=\"Last name\" \r\n                      //value={e.target.value}\r\n                      onChangeText={(val) => this.updateInputVal(val, 'email')}\r\n                      // onChange={e => {\r\n                      //   this.updateInputVal(e.target.value, 'LastName')\r\n                      //   this.setState({\r\n                      //     LastName : e.target.value\r\n                      //   })\r\n                      // }}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input \r\n                      type=\"email\" \r\n                      className=\"form-control\" \r\n                      placeholder=\"Enter email\" \r\n                      onChange={e => {\r\n                        this.updateInputVal(e.target.value, 'email')\r\n                        this.setState({\r\n                          email : e.target.value\r\n                        })\r\n                      }}\r\n                      // value={this.state.email}\r\n                      // onChangeText={(val) => this.updateInputVal(val, 'email')}\r\n                    \r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input \r\n                      type=\"password\" \r\n                      className=\"form-control\" \r\n                      placeholder=\"Enter password\"\r\n                      onChange={e => {\r\n                        this.updateInputVal(e.target.value, 'password')\r\n                        this.setState({\r\n                          password : e.target.value\r\n                        })\r\n                      }}\r\n                      // value={this.state.password}\r\n                      // onChangeText={(val) => this.updateInputVal(val, 'password')}\r\n                      maxLength={15}\r\n                      secureTextEntry={true}           \r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\"\r\n                onPress={() => this.registerUser()}>Sign Up\r\n                </button>\r\n                {/* <p className=\"forgot-password text-right\">\r\n                    Already registered <a href=\"#\">sign in?</a>\r\n                </p> */}\r\n            </form>\r\n      </Card>  \r\n      </div>\r\n\r\n\r\n\r\n\r\n      // <View style={styles.container}>  \r\n      //   <TextInput\r\n      //     style={styles.inputStyle}\r\n      //     placeholder=\"Name\"\r\n      //     value={this.state.displayName}\r\n      //     onChangeText={(val) => this.updateInputVal(val, 'displayName')}\r\n      //   />      \r\n      //   <TextInput\r\n      //     style={styles.inputStyle}\r\n      //     placeholder=\"Email\"\r\n      //     value={this.state.email}\r\n      //     onChangeText={(val) => this.updateInputVal(val, 'email')}\r\n      //   />\r\n      //   <TextInput\r\n      //     style={styles.inputStyle}\r\n      //     placeholder=\"Password\"\r\n      //     value={this.state.password}\r\n      //     onChangeText={(val) => this.updateInputVal(val, 'password')}\r\n      //     maxLength={15}\r\n      //     secureTextEntry={true}\r\n      //   />   \r\n      //   <Button\r\n      //     color=\"#3740FE\"\r\n      //     title=\"Signup\"\r\n      //     onPress={() => this.registerUser()}\r\n      //   />\r\n\r\n      //   <Text \r\n      //     style={styles.loginText}\r\n      //     onPress={() => this.props.navigation.navigate('Login')}>\r\n      //     Already Registered? Click here to login\r\n      //   </Text>                          \r\n      // </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    padding: 35,\r\n    backgroundColor: '#fff'\r\n  },\r\n  inputStyle: {\r\n    width: '100%',\r\n    marginBottom: 15,\r\n    paddingBottom: 15,\r\n    alignSelf: \"center\",\r\n    borderColor: \"#ccc\",\r\n    borderBottomWidth: 1\r\n  },\r\n  loginText: {\r\n    color: '#3740FE',\r\n    marginTop: 25,\r\n    textAlign: 'center'\r\n  },\r\n  preloader: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#fff'\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}