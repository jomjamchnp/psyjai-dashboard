{"ast":null,"code":"/* global _WORKLET */\nimport { Easing } from './Easing';\nimport { isColor, convertToHSVA, toRGBA } from './Colors';\nimport NativeReanimated from './NativeReanimated';\nlet IN_STYLE_UPDATER = false;\nexport function initialUpdaterRun(updater) {\n  IN_STYLE_UPDATER = true;\n  const result = updater();\n  IN_STYLE_UPDATER = false;\n  return result;\n}\nexport function transform(value, handler) {\n  'worklet';\n\n  if (value === undefined) {\n    return undefined;\n  }\n\n  if (typeof value === 'string') {\n    // toInt\n    // TODO handle color\n    const match = value.match(/([A-Za-z]*)(-?\\d*\\.?\\d*)([A-Za-z%]*)/);\n    const prefix = match[1];\n    const suffix = match[3];\n    const number = match[2];\n    handler.__prefix = prefix;\n    handler.__suffix = suffix;\n    return parseFloat(number);\n  } // toString if __prefix is available and number otherwise\n\n\n  if (handler.__prefix === undefined) {\n    return value;\n  }\n\n  return handler.__prefix + value + handler.__suffix;\n}\nexport function transformAnimation(animation) {\n  'worklet';\n\n  if (!animation) {\n    return;\n  }\n\n  animation.toValue = transform(animation.toValue, animation);\n  animation.current = transform(animation.current, animation);\n  animation.startValue = transform(animation.startValue, animation);\n}\nexport function decorateAnimation(animation) {\n  'worklet';\n\n  if (animation.isHigherOrder) {\n    return;\n  }\n\n  const baseOnStart = animation.onStart;\n  const baseOnFrame = animation.onFrame;\n  const animationCopy = Object.assign({}, animation);\n  delete animationCopy.callback;\n\n  const prefNumberSuffOnStart = (animation, value, timestamp, previousAnimation) => {\n    const val = transform(value, animation);\n    transformAnimation(animation);\n    if (previousAnimation !== animation) transformAnimation(previousAnimation);\n    baseOnStart(animation, val, timestamp, previousAnimation);\n    transformAnimation(animation);\n    if (previousAnimation !== animation) transformAnimation(previousAnimation);\n  };\n\n  const prefNumberSuffOnFrame = (animation, timestamp) => {\n    transformAnimation(animation);\n    const res = baseOnFrame(animation, timestamp);\n    transformAnimation(animation);\n    return res;\n  };\n\n  const tab = ['H', 'S', 'V', 'A'];\n\n  const colorOnStart = (animation, value, timestamp, previousAnimation) => {\n    let HSVAValue;\n    let HSVACurrent;\n    let HSVAToValue;\n    const res = [];\n\n    if (isColor(value)) {\n      HSVACurrent = convertToHSVA(animation.current);\n      HSVAValue = convertToHSVA(value);\n\n      if (animation.toValue) {\n        HSVAToValue = convertToHSVA(animation.toValue);\n      }\n    }\n\n    tab.forEach((i, index) => {\n      animation[i] = Object.assign({}, animationCopy);\n      animation[i].current = HSVACurrent[index];\n      animation[i].toValue = HSVAToValue ? HSVAToValue[index] : undefined;\n      animation[i].onStart(animation[i], HSVAValue[index], timestamp, previousAnimation ? previousAnimation[i] : undefined);\n      res.push(animation[i].current);\n    });\n    animation.current = toRGBA(res);\n  };\n\n  const colorOnFrame = (animation, timestamp) => {\n    const HSVACurrent = convertToHSVA(animation.current);\n    const res = [];\n    let finished = true;\n    tab.forEach((i, index) => {\n      animation[i].current = HSVACurrent[index];\n      finished &= animation[i].onFrame(animation[i], timestamp);\n      res.push(animation[i].current);\n    });\n    animation.current = toRGBA(res);\n    return finished;\n  };\n\n  animation.onStart = (animation, value, timestamp, previousAnimation) => {\n    if (isColor(value)) {\n      colorOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = colorOnFrame;\n      return;\n    } else if (typeof value === 'string') {\n      prefNumberSuffOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = prefNumberSuffOnFrame;\n      return;\n    }\n\n    baseOnStart(animation, value, timestamp, previousAnimation);\n  };\n}\nexport function defineAnimation(starting, factory) {\n  'worklet';\n\n  if (IN_STYLE_UPDATER) {\n    return starting;\n  }\n\n  const create = () => {\n    'worklet';\n\n    const animation = factory();\n    decorateAnimation(animation);\n    return animation;\n  };\n\n  if (_WORKLET || !NativeReanimated.native) {\n    return create();\n  }\n\n  return create;\n}\nexport function cancelAnimation(sharedValue) {\n  'worklet'; // setting the current value cancels the animation if one is currently running\n\n  sharedValue.value = sharedValue.value; // eslint-disable-line no-self-assign\n}\nexport function withTiming(toValue, userConfig, callback) {\n  'worklet';\n\n  return defineAnimation(toValue, () => {\n    'worklet';\n\n    const config = {\n      duration: 300,\n      easing: Easing.inOut(Easing.quad)\n    };\n\n    if (userConfig) {\n      Object.keys(userConfig).forEach(key => config[key] = userConfig[key]);\n    }\n\n    function timing(animation, now) {\n      const {\n        toValue,\n        progress,\n        startTime,\n        current\n      } = animation;\n      const runtime = now - startTime;\n\n      if (runtime >= config.duration) {\n        // reset startTime to avoid reusing finished animation config in `start` method\n        animation.startTime = 0;\n        animation.current = toValue;\n        return true;\n      }\n\n      const newProgress = config.easing(runtime / config.duration);\n      const dist = (toValue - current) * (newProgress - progress) / (1 - progress);\n      animation.current += dist;\n      animation.progress = newProgress;\n      return false;\n    }\n\n    function onStart(animation, value, now, previousAnimation) {\n      if (previousAnimation && previousAnimation.type === 'timing' && previousAnimation.toValue === toValue && previousAnimation.startTime) {\n        // to maintain continuity of timing animations we check if we are starting\n        // new timing over the old one with the same parameters. If so, we want\n        // to copy animation timeline properties\n        animation.startTime = previousAnimation.startTime;\n        animation.progress = previousAnimation.progress;\n      } else {\n        animation.startTime = now;\n        animation.progress = 0;\n      }\n\n      animation.current = value;\n    }\n\n    return {\n      type: 'timing',\n      onFrame: timing,\n      onStart,\n      progress: 0,\n      toValue,\n      current: toValue,\n      callback\n    };\n  });\n}\nexport function withSpring(toValue, userConfig, callback) {\n  'worklet';\n\n  return defineAnimation(toValue, () => {\n    'worklet'; // TODO: figure out why we can't use spread or Object.assign here\n    // when user config is \"frozen object\" we can't enumerate it (perhaps\n    // something is wrong with the object prototype).\n\n    const config = {\n      damping: 10,\n      mass: 1,\n      stiffness: 100,\n      overshootClamping: false,\n      restDisplacementThreshold: 0.01,\n      restSpeedThreshold: 2\n    };\n\n    if (userConfig) {\n      Object.keys(userConfig).forEach(key => config[key] = userConfig[key]);\n    }\n\n    function spring(animation, now) {\n      const {\n        toValue,\n        lastTimestamp,\n        current,\n        velocity\n      } = animation;\n      const deltaTime = Math.min(now - lastTimestamp, 64);\n      animation.lastTimestamp = now;\n      const c = config.damping;\n      const m = config.mass;\n      const k = config.stiffness;\n      const v0 = -velocity;\n      const x0 = toValue - current;\n      const zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n\n      const omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n\n      const omega1 = omega0 * Math.sqrt(1 - zeta ** 2); // exponential decay\n\n      const t = deltaTime / 1000;\n      const sin1 = Math.sin(omega1 * t);\n      const cos1 = Math.cos(omega1 * t); // under damped\n\n      const underDampedEnvelope = Math.exp(-zeta * omega0 * t);\n      const underDampedFrag1 = underDampedEnvelope * (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\n      const underDampedPosition = toValue - underDampedFrag1; // This looks crazy -- it's actually just the derivative of the oscillation function\n\n      const underDampedVelocity = zeta * omega0 * underDampedFrag1 - underDampedEnvelope * (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1); // critically damped\n\n      const criticallyDampedEnvelope = Math.exp(-omega0 * t);\n      const criticallyDampedPosition = toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\n      const criticallyDampedVelocity = criticallyDampedEnvelope * (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\n\n      const isOvershooting = () => {\n        if (config.overshootClamping && config.stiffness !== 0) {\n          return current < toValue ? animation.current > toValue : animation.current < toValue;\n        } else {\n          return false;\n        }\n      };\n\n      const isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\n      const isDisplacement = config.stiffness === 0 || Math.abs(toValue - current) < config.restDisplacementThreshold;\n\n      if (zeta < 1) {\n        animation.current = underDampedPosition;\n        animation.velocity = underDampedVelocity;\n      } else {\n        animation.current = criticallyDampedPosition;\n        animation.velocity = criticallyDampedVelocity;\n      }\n\n      if (isOvershooting() || isVelocity && isDisplacement) {\n        if (config.stiffness !== 0) {\n          animation.velocity = 0;\n          animation.current = toValue;\n        }\n\n        return true;\n      }\n    }\n\n    function onStart(animation, value, now, previousAnimation) {\n      animation.current = value;\n\n      if (previousAnimation) {\n        animation.velocity = previousAnimation.velocity || animation.velocity || 0;\n        animation.lastTimestamp = previousAnimation.lastTimestamp || now;\n      } else {\n        animation.lastTimestamp = now;\n      }\n    }\n\n    return {\n      onFrame: spring,\n      onStart,\n      toValue,\n      velocity: config.velocity || 0,\n      current: toValue,\n      callback\n    };\n  });\n}\nexport function withDecay(userConfig, callback) {\n  'worklet';\n\n  return defineAnimation(0, () => {\n    'worklet';\n\n    const config = {\n      deceleration: 0.998\n    };\n\n    if (userConfig) {\n      Object.keys(userConfig).forEach(key => config[key] = userConfig[key]);\n    }\n\n    const VELOCITY_EPS = 5;\n\n    function decay(animation, now) {\n      const {\n        lastTimestamp,\n        initialVelocity,\n        current,\n        velocity\n      } = animation;\n      const deltaTime = Math.min(now - lastTimestamp, 64);\n      animation.lastTimestamp = now;\n      const kv = Math.pow(config.deceleration, deltaTime);\n      const kx = config.deceleration * (1 - kv) / (1 - config.deceleration);\n      const v0 = velocity / 1000;\n      const v = v0 * kv * 1000;\n      const x = current + v0 * kx;\n      animation.current = x;\n      animation.velocity = v;\n      let toValueIsReached = null;\n\n      if (Array.isArray(config.clamp)) {\n        if (initialVelocity < 0 && animation.current <= config.clamp[0]) {\n          toValueIsReached = config.clamp[0];\n        } else if (initialVelocity > 0 && animation.current >= config.clamp[1]) {\n          toValueIsReached = config.clamp[1];\n        }\n      }\n\n      if (Math.abs(v) < VELOCITY_EPS || toValueIsReached !== null) {\n        if (toValueIsReached !== null) {\n          animation.current = toValueIsReached;\n        }\n\n        return true;\n      }\n    }\n\n    function onStart(animation, value, now) {\n      animation.current = value;\n      animation.lastTimestamp = now;\n      animation.initialVelocity = config.velocity;\n    }\n\n    return {\n      onFrame: decay,\n      onStart,\n      velocity: config.velocity || 0,\n      callback\n    };\n  });\n}\nexport function withDelay(delayMs, _nextAnimation) {\n  'worklet';\n\n  return defineAnimation(_nextAnimation, () => {\n    'worklet';\n\n    const nextAnimation = typeof _nextAnimation === 'function' ? _nextAnimation() : _nextAnimation;\n\n    function delay(animation, now) {\n      const {\n        startTime,\n        started,\n        previousAnimation\n      } = animation;\n\n      if (now - startTime > delayMs) {\n        if (!started) {\n          nextAnimation.onStart(nextAnimation, animation.current, now, previousAnimation);\n          animation.previousAnimation = null;\n          animation.started = true;\n        }\n\n        const finished = nextAnimation.onFrame(nextAnimation, now);\n        animation.current = nextAnimation.current;\n        return finished;\n      } else if (previousAnimation) {\n        const finished = previousAnimation.onFrame(previousAnimation, now);\n        animation.current = previousAnimation.current;\n\n        if (finished) {\n          animation.previousAnimation = null;\n        }\n      }\n\n      return false;\n    }\n\n    function onStart(animation, value, now, previousAnimation) {\n      animation.startTime = now;\n      animation.started = false;\n      animation.current = value;\n      animation.previousAnimation = previousAnimation;\n    }\n\n    const callback = finished => {\n      if (nextAnimation.callback) {\n        nextAnimation.callback(finished);\n      }\n    };\n\n    return {\n      isHigherOrder: true,\n      onFrame: delay,\n      onStart,\n      current: nextAnimation.current,\n      callback\n    };\n  });\n}\nexport function withSequence(..._animations) {\n  'worklet';\n\n  return defineAnimation(_animations[0], () => {\n    'worklet';\n\n    const animations = _animations.map(a => {\n      const result = typeof a === 'function' ? a() : a;\n      result.finished = false;\n      return result;\n    });\n\n    const firstAnimation = animations[0];\n\n    const callback = finished => {\n      if (finished) {\n        // we want to call the callback after every single animation\n        // not after all of them\n        return;\n      } // this is going to be called only if sequence has been cancelled\n\n\n      animations.forEach(animation => {\n        if (typeof animation.callback === 'function' && !animation.finished) {\n          animation.callback(finished);\n        }\n      });\n    };\n\n    function sequence(animation, now) {\n      const currentAnim = animations[animation.animationIndex];\n      const finished = currentAnim.onFrame(currentAnim, now);\n      animation.current = currentAnim.current;\n\n      if (finished) {\n        // we want to call the callback after every single animation\n        if (currentAnim.callback) {\n          currentAnim.callback(true\n          /* finished */\n          );\n        }\n\n        currentAnim.finished = true;\n        animation.animationIndex += 1;\n\n        if (animation.animationIndex < animations.length) {\n          const nextAnim = animations[animation.animationIndex];\n          nextAnim.onStart(nextAnim, currentAnim.current, now, currentAnim);\n          return false;\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n\n    function onStart(animation, value, now, previousAnimation) {\n      if (animations.length === 1) {\n        throw Error('withSequence() animation require more than one animation as argument');\n      }\n\n      animation.animationIndex = 0;\n\n      if (previousAnimation === undefined) {\n        previousAnimation = animations[animations.length - 1];\n      }\n\n      firstAnimation.onStart(firstAnimation, value, now, previousAnimation);\n    }\n\n    return {\n      isHigherOrder: true,\n      onFrame: sequence,\n      onStart,\n      animationIndex: 0,\n      current: firstAnimation.current,\n      callback\n    };\n  });\n}\nexport function withRepeat(_nextAnimation, numberOfReps = 2, reverse = false, callback) {\n  'worklet';\n\n  return defineAnimation(_nextAnimation, () => {\n    'worklet';\n\n    const nextAnimation = typeof _nextAnimation === 'function' ? _nextAnimation() : _nextAnimation;\n\n    function repeat(animation, now) {\n      const finished = nextAnimation.onFrame(nextAnimation, now);\n      animation.current = nextAnimation.current;\n\n      if (finished) {\n        animation.reps += 1; // call inner animation's callback on every repetition\n        // as the second argument the animation's current value is passed\n\n        if (nextAnimation.callback) {\n          nextAnimation.callback(true\n          /* finished */\n          , animation.current);\n        }\n\n        if (numberOfReps > 0 && animation.reps >= numberOfReps) {\n          return true;\n        }\n\n        const startValue = reverse ? nextAnimation.current : animation.startValue;\n\n        if (reverse) {\n          nextAnimation.toValue = animation.startValue;\n          animation.startValue = startValue;\n        }\n\n        nextAnimation.onStart(nextAnimation, startValue, now, nextAnimation.previousAnimation);\n        return false;\n      }\n\n      return false;\n    }\n\n    const repCallback = finished => {\n      if (callback) {\n        callback(finished);\n      } // when cancelled call inner animation's callback\n\n\n      if (!finished && nextAnimation.callback) {\n        nextAnimation.callback(false\n        /* finished */\n        );\n      }\n    };\n\n    function onStart(animation, value, now, previousAnimation) {\n      animation.startValue = value;\n      animation.reps = 0;\n      nextAnimation.onStart(nextAnimation, value, now, previousAnimation);\n    }\n\n    return {\n      isHigherOrder: true,\n      onFrame: repeat,\n      onStart,\n      reps: 0,\n      current: nextAnimation.current,\n      callback: repCallback\n    };\n  });\n}\n/* Deprecated section, kept for backward compatibility. Will be removed soon */\n\nexport function delay(delayMs, _nextAnimation) {\n  'worklet';\n\n  console.warn('Method `delay` is deprecated. Please use `withDelay` instead');\n  return withDelay(delayMs, _nextAnimation);\n}\nexport function repeat(_nextAnimation, numberOfReps = 2, reverse = false, callback) {\n  'worklet';\n\n  console.warn('Method `repeat` is deprecated. Please use `withRepeat` instead');\n  return withRepeat(_nextAnimation, numberOfReps, reverse, callback);\n}\nexport function loop(nextAnimation, numberOfLoops = 1) {\n  'worklet';\n\n  console.warn('Method `loop` is deprecated. Please use `withRepeat` instead');\n  return repeat(nextAnimation, Math.round(numberOfLoops * 2), true);\n}\nexport function sequence(..._animations) {\n  'worklet';\n\n  console.warn('Method `sequence` is deprecated. Please use `withSequence` instead');\n  return withSequence(..._animations);\n}\n/* Deprecated section end */","map":{"version":3,"sources":["D:/dash_kol/my-app/node_modules/react-native-reanimated/src/reanimated2/animations.js"],"names":["Easing","isColor","convertToHSVA","toRGBA","NativeReanimated","IN_STYLE_UPDATER","initialUpdaterRun","updater","result","transform","value","handler","undefined","match","prefix","suffix","number","__prefix","__suffix","parseFloat","transformAnimation","animation","toValue","current","startValue","decorateAnimation","isHigherOrder","baseOnStart","onStart","baseOnFrame","onFrame","animationCopy","Object","assign","callback","prefNumberSuffOnStart","timestamp","previousAnimation","val","prefNumberSuffOnFrame","res","tab","colorOnStart","HSVAValue","HSVACurrent","HSVAToValue","forEach","i","index","push","colorOnFrame","finished","defineAnimation","starting","factory","create","_WORKLET","native","cancelAnimation","sharedValue","withTiming","userConfig","config","duration","easing","inOut","quad","keys","key","timing","now","progress","startTime","runtime","newProgress","dist","type","withSpring","damping","mass","stiffness","overshootClamping","restDisplacementThreshold","restSpeedThreshold","spring","lastTimestamp","velocity","deltaTime","Math","min","c","m","k","v0","x0","zeta","sqrt","omega0","omega1","t","sin1","sin","cos1","cos","underDampedEnvelope","exp","underDampedFrag1","underDampedPosition","underDampedVelocity","criticallyDampedEnvelope","criticallyDampedPosition","criticallyDampedVelocity","isOvershooting","isVelocity","abs","isDisplacement","withDecay","deceleration","VELOCITY_EPS","decay","initialVelocity","kv","pow","kx","v","x","toValueIsReached","Array","isArray","clamp","withDelay","delayMs","_nextAnimation","nextAnimation","delay","started","withSequence","_animations","animations","map","a","firstAnimation","sequence","currentAnim","animationIndex","length","nextAnim","Error","withRepeat","numberOfReps","reverse","repeat","reps","repCallback","console","warn","loop","numberOfLoops","round"],"mappings":"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","sourcesContent":["/* global _WORKLET */\nimport { Easing } from './Easing';\nimport { isColor, convertToHSVA, toRGBA } from './Colors';\nimport NativeReanimated from './NativeReanimated';\n\nlet IN_STYLE_UPDATER = false;\n\nexport function initialUpdaterRun(updater) {\n  IN_STYLE_UPDATER = true;\n  const result = updater();\n  IN_STYLE_UPDATER = false;\n  return result;\n}\n\nexport function transform(value, handler) {\n  'worklet';\n  if (value === undefined) {\n    return undefined;\n  }\n\n  if (typeof value === 'string') {\n    // toInt\n    // TODO handle color\n    const match = value.match(/([A-Za-z]*)(-?\\d*\\.?\\d*)([A-Za-z%]*)/);\n    const prefix = match[1];\n    const suffix = match[3];\n    const number = match[2];\n    handler.__prefix = prefix;\n    handler.__suffix = suffix;\n    return parseFloat(number);\n  }\n\n  // toString if __prefix is available and number otherwise\n  if (handler.__prefix === undefined) {\n    return value;\n  }\n\n  return handler.__prefix + value + handler.__suffix;\n}\n\nexport function transformAnimation(animation) {\n  'worklet';\n  if (!animation) {\n    return;\n  }\n  animation.toValue = transform(animation.toValue, animation);\n  animation.current = transform(animation.current, animation);\n  animation.startValue = transform(animation.startValue, animation);\n}\n\nexport function decorateAnimation(animation) {\n  'worklet';\n  if (animation.isHigherOrder) {\n    return;\n  }\n  const baseOnStart = animation.onStart;\n  const baseOnFrame = animation.onFrame;\n  const animationCopy = Object.assign({}, animation);\n  delete animationCopy.callback;\n\n  const prefNumberSuffOnStart = (\n    animation,\n    value,\n    timestamp,\n    previousAnimation\n  ) => {\n    const val = transform(value, animation);\n    transformAnimation(animation);\n    if (previousAnimation !== animation) transformAnimation(previousAnimation);\n\n    baseOnStart(animation, val, timestamp, previousAnimation);\n\n    transformAnimation(animation);\n    if (previousAnimation !== animation) transformAnimation(previousAnimation);\n  };\n  const prefNumberSuffOnFrame = (animation, timestamp) => {\n    transformAnimation(animation);\n\n    const res = baseOnFrame(animation, timestamp);\n\n    transformAnimation(animation);\n    return res;\n  };\n\n  const tab = ['H', 'S', 'V', 'A'];\n  const colorOnStart = (animation, value, timestamp, previousAnimation) => {\n    let HSVAValue;\n    let HSVACurrent;\n    let HSVAToValue;\n    const res = [];\n    if (isColor(value)) {\n      HSVACurrent = convertToHSVA(animation.current);\n      HSVAValue = convertToHSVA(value);\n      if (animation.toValue) {\n        HSVAToValue = convertToHSVA(animation.toValue);\n      }\n    }\n    tab.forEach((i, index) => {\n      animation[i] = Object.assign({}, animationCopy);\n      animation[i].current = HSVACurrent[index];\n      animation[i].toValue = HSVAToValue ? HSVAToValue[index] : undefined;\n      animation[i].onStart(\n        animation[i],\n        HSVAValue[index],\n        timestamp,\n        previousAnimation ? previousAnimation[i] : undefined\n      );\n      res.push(animation[i].current);\n    });\n\n    animation.current = toRGBA(res);\n  };\n\n  const colorOnFrame = (animation, timestamp) => {\n    const HSVACurrent = convertToHSVA(animation.current);\n    const res = [];\n    let finished = true;\n    tab.forEach((i, index) => {\n      animation[i].current = HSVACurrent[index];\n      finished &= animation[i].onFrame(animation[i], timestamp);\n      res.push(animation[i].current);\n    });\n\n    animation.current = toRGBA(res);\n    return finished;\n  };\n\n  animation.onStart = (animation, value, timestamp, previousAnimation) => {\n    if (isColor(value)) {\n      colorOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = colorOnFrame;\n      return;\n    } else if (typeof value === 'string') {\n      prefNumberSuffOnStart(animation, value, timestamp, previousAnimation);\n      animation.onFrame = prefNumberSuffOnFrame;\n      return;\n    }\n    baseOnStart(animation, value, timestamp, previousAnimation);\n  };\n}\n\nexport function defineAnimation(starting, factory) {\n  'worklet';\n  if (IN_STYLE_UPDATER) {\n    return starting;\n  }\n  const create = () => {\n    'worklet';\n    const animation = factory();\n    decorateAnimation(animation);\n    return animation;\n  };\n\n  if (_WORKLET || !NativeReanimated.native) {\n    return create();\n  }\n  return create;\n}\n\nexport function cancelAnimation(sharedValue) {\n  'worklet';\n  // setting the current value cancels the animation if one is currently running\n  sharedValue.value = sharedValue.value; // eslint-disable-line no-self-assign\n}\n\nexport function withTiming(toValue, userConfig, callback) {\n  'worklet';\n\n  return defineAnimation(toValue, () => {\n    'worklet';\n    const config = {\n      duration: 300,\n      easing: Easing.inOut(Easing.quad),\n    };\n    if (userConfig) {\n      Object.keys(userConfig).forEach((key) => (config[key] = userConfig[key]));\n    }\n\n    function timing(animation, now) {\n      const { toValue, progress, startTime, current } = animation;\n\n      const runtime = now - startTime;\n\n      if (runtime >= config.duration) {\n        // reset startTime to avoid reusing finished animation config in `start` method\n        animation.startTime = 0;\n        animation.current = toValue;\n        return true;\n      }\n\n      const newProgress = config.easing(runtime / config.duration);\n\n      const dist =\n        ((toValue - current) * (newProgress - progress)) / (1 - progress);\n      animation.current += dist;\n      animation.progress = newProgress;\n      return false;\n    }\n\n    function onStart(animation, value, now, previousAnimation) {\n      if (\n        previousAnimation &&\n        previousAnimation.type === 'timing' &&\n        previousAnimation.toValue === toValue &&\n        previousAnimation.startTime\n      ) {\n        // to maintain continuity of timing animations we check if we are starting\n        // new timing over the old one with the same parameters. If so, we want\n        // to copy animation timeline properties\n        animation.startTime = previousAnimation.startTime;\n        animation.progress = previousAnimation.progress;\n      } else {\n        animation.startTime = now;\n        animation.progress = 0;\n      }\n      animation.current = value;\n    }\n\n    return {\n      type: 'timing',\n      onFrame: timing,\n      onStart,\n      progress: 0,\n      toValue,\n      current: toValue,\n      callback,\n    };\n  });\n}\n\nexport function withSpring(toValue, userConfig, callback) {\n  'worklet';\n\n  return defineAnimation(toValue, () => {\n    'worklet';\n\n    // TODO: figure out why we can't use spread or Object.assign here\n    // when user config is \"frozen object\" we can't enumerate it (perhaps\n    // something is wrong with the object prototype).\n    const config = {\n      damping: 10,\n      mass: 1,\n      stiffness: 100,\n      overshootClamping: false,\n      restDisplacementThreshold: 0.01,\n      restSpeedThreshold: 2,\n    };\n    if (userConfig) {\n      Object.keys(userConfig).forEach((key) => (config[key] = userConfig[key]));\n    }\n\n    function spring(animation, now) {\n      const { toValue, lastTimestamp, current, velocity } = animation;\n\n      const deltaTime = Math.min(now - lastTimestamp, 64);\n      animation.lastTimestamp = now;\n\n      const c = config.damping;\n      const m = config.mass;\n      const k = config.stiffness;\n\n      const v0 = -velocity;\n      const x0 = toValue - current;\n\n      const zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n      const omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n      const omega1 = omega0 * Math.sqrt(1 - zeta ** 2); // exponential decay\n\n      const t = deltaTime / 1000;\n\n      const sin1 = Math.sin(omega1 * t);\n      const cos1 = Math.cos(omega1 * t);\n\n      // under damped\n      const underDampedEnvelope = Math.exp(-zeta * omega0 * t);\n      const underDampedFrag1 =\n        underDampedEnvelope *\n        (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\n\n      const underDampedPosition = toValue - underDampedFrag1;\n      // This looks crazy -- it's actually just the derivative of the oscillation function\n      const underDampedVelocity =\n        zeta * omega0 * underDampedFrag1 -\n        underDampedEnvelope *\n          (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\n\n      // critically damped\n      const criticallyDampedEnvelope = Math.exp(-omega0 * t);\n      const criticallyDampedPosition =\n        toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\n\n      const criticallyDampedVelocity =\n        criticallyDampedEnvelope *\n        (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\n\n      const isOvershooting = () => {\n        if (config.overshootClamping && config.stiffness !== 0) {\n          return current < toValue\n            ? animation.current > toValue\n            : animation.current < toValue;\n        } else {\n          return false;\n        }\n      };\n\n      const isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\n      const isDisplacement =\n        config.stiffness === 0 ||\n        Math.abs(toValue - current) < config.restDisplacementThreshold;\n\n      if (zeta < 1) {\n        animation.current = underDampedPosition;\n        animation.velocity = underDampedVelocity;\n      } else {\n        animation.current = criticallyDampedPosition;\n        animation.velocity = criticallyDampedVelocity;\n      }\n\n      if (isOvershooting() || (isVelocity && isDisplacement)) {\n        if (config.stiffness !== 0) {\n          animation.velocity = 0;\n          animation.current = toValue;\n        }\n        return true;\n      }\n    }\n\n    function onStart(animation, value, now, previousAnimation) {\n      animation.current = value;\n      if (previousAnimation) {\n        animation.velocity =\n          previousAnimation.velocity || animation.velocity || 0;\n        animation.lastTimestamp = previousAnimation.lastTimestamp || now;\n      } else {\n        animation.lastTimestamp = now;\n      }\n    }\n\n    return {\n      onFrame: spring,\n      onStart,\n      toValue,\n      velocity: config.velocity || 0,\n      current: toValue,\n      callback,\n    };\n  });\n}\n\nexport function withDecay(userConfig, callback) {\n  'worklet';\n\n  return defineAnimation(0, () => {\n    'worklet';\n    const config = {\n      deceleration: 0.998,\n    };\n    if (userConfig) {\n      Object.keys(userConfig).forEach((key) => (config[key] = userConfig[key]));\n    }\n\n    const VELOCITY_EPS = 5;\n\n    function decay(animation, now) {\n      const { lastTimestamp, initialVelocity, current, velocity } = animation;\n\n      const deltaTime = Math.min(now - lastTimestamp, 64);\n      animation.lastTimestamp = now;\n\n      const kv = Math.pow(config.deceleration, deltaTime);\n      const kx = (config.deceleration * (1 - kv)) / (1 - config.deceleration);\n\n      const v0 = velocity / 1000;\n      const v = v0 * kv * 1000;\n      const x = current + v0 * kx;\n\n      animation.current = x;\n      animation.velocity = v;\n\n      let toValueIsReached = null;\n\n      if (Array.isArray(config.clamp)) {\n        if (initialVelocity < 0 && animation.current <= config.clamp[0]) {\n          toValueIsReached = config.clamp[0];\n        } else if (\n          initialVelocity > 0 &&\n          animation.current >= config.clamp[1]\n        ) {\n          toValueIsReached = config.clamp[1];\n        }\n      }\n\n      if (Math.abs(v) < VELOCITY_EPS || toValueIsReached !== null) {\n        if (toValueIsReached !== null) {\n          animation.current = toValueIsReached;\n        }\n\n        return true;\n      }\n    }\n\n    function onStart(animation, value, now) {\n      animation.current = value;\n      animation.lastTimestamp = now;\n      animation.initialVelocity = config.velocity;\n    }\n\n    return {\n      onFrame: decay,\n      onStart,\n      velocity: config.velocity || 0,\n      callback,\n    };\n  });\n}\n\nexport function withDelay(delayMs, _nextAnimation) {\n  'worklet';\n  return defineAnimation(_nextAnimation, () => {\n    'worklet';\n    const nextAnimation =\n      typeof _nextAnimation === 'function' ? _nextAnimation() : _nextAnimation;\n\n    function delay(animation, now) {\n      const { startTime, started, previousAnimation } = animation;\n\n      if (now - startTime > delayMs) {\n        if (!started) {\n          nextAnimation.onStart(\n            nextAnimation,\n            animation.current,\n            now,\n            previousAnimation\n          );\n          animation.previousAnimation = null;\n          animation.started = true;\n        }\n        const finished = nextAnimation.onFrame(nextAnimation, now);\n        animation.current = nextAnimation.current;\n        return finished;\n      } else if (previousAnimation) {\n        const finished = previousAnimation.onFrame(previousAnimation, now);\n        animation.current = previousAnimation.current;\n        if (finished) {\n          animation.previousAnimation = null;\n        }\n      }\n      return false;\n    }\n\n    function onStart(animation, value, now, previousAnimation) {\n      animation.startTime = now;\n      animation.started = false;\n      animation.current = value;\n      animation.previousAnimation = previousAnimation;\n    }\n\n    const callback = (finished) => {\n      if (nextAnimation.callback) {\n        nextAnimation.callback(finished);\n      }\n    };\n\n    return {\n      isHigherOrder: true,\n      onFrame: delay,\n      onStart,\n      current: nextAnimation.current,\n      callback,\n    };\n  });\n}\n\nexport function withSequence(..._animations) {\n  'worklet';\n  return defineAnimation(_animations[0], () => {\n    'worklet';\n    const animations = _animations.map((a) => {\n      const result = typeof a === 'function' ? a() : a;\n      result.finished = false;\n      return result;\n    });\n    const firstAnimation = animations[0];\n\n    const callback = (finished) => {\n      if (finished) {\n        // we want to call the callback after every single animation\n        // not after all of them\n        return;\n      }\n      // this is going to be called only if sequence has been cancelled\n      animations.forEach((animation) => {\n        if (typeof animation.callback === 'function' && !animation.finished) {\n          animation.callback(finished);\n        }\n      });\n    };\n\n    function sequence(animation, now) {\n      const currentAnim = animations[animation.animationIndex];\n      const finished = currentAnim.onFrame(currentAnim, now);\n      animation.current = currentAnim.current;\n      if (finished) {\n        // we want to call the callback after every single animation\n        if (currentAnim.callback) {\n          currentAnim.callback(true /* finished */);\n        }\n        currentAnim.finished = true;\n        animation.animationIndex += 1;\n        if (animation.animationIndex < animations.length) {\n          const nextAnim = animations[animation.animationIndex];\n          nextAnim.onStart(nextAnim, currentAnim.current, now, currentAnim);\n          return false;\n        }\n        return true;\n      }\n      return false;\n    }\n\n    function onStart(animation, value, now, previousAnimation) {\n      if (animations.length === 1) {\n        throw Error(\n          'withSequence() animation require more than one animation as argument'\n        );\n      }\n      animation.animationIndex = 0;\n      if (previousAnimation === undefined) {\n        previousAnimation = animations[animations.length - 1];\n      }\n      firstAnimation.onStart(firstAnimation, value, now, previousAnimation);\n    }\n\n    return {\n      isHigherOrder: true,\n      onFrame: sequence,\n      onStart,\n      animationIndex: 0,\n      current: firstAnimation.current,\n      callback,\n    };\n  });\n}\n\nexport function withRepeat(\n  _nextAnimation,\n  numberOfReps = 2,\n  reverse = false,\n  callback\n) {\n  'worklet';\n\n  return defineAnimation(_nextAnimation, () => {\n    'worklet';\n\n    const nextAnimation =\n      typeof _nextAnimation === 'function' ? _nextAnimation() : _nextAnimation;\n\n    function repeat(animation, now) {\n      const finished = nextAnimation.onFrame(nextAnimation, now);\n      animation.current = nextAnimation.current;\n      if (finished) {\n        animation.reps += 1;\n        // call inner animation's callback on every repetition\n        // as the second argument the animation's current value is passed\n        if (nextAnimation.callback) {\n          nextAnimation.callback(true /* finished */, animation.current);\n        }\n        if (numberOfReps > 0 && animation.reps >= numberOfReps) {\n          return true;\n        }\n\n        const startValue = reverse\n          ? nextAnimation.current\n          : animation.startValue;\n        if (reverse) {\n          nextAnimation.toValue = animation.startValue;\n          animation.startValue = startValue;\n        }\n        nextAnimation.onStart(\n          nextAnimation,\n          startValue,\n          now,\n          nextAnimation.previousAnimation\n        );\n        return false;\n      }\n      return false;\n    }\n\n    const repCallback = (finished) => {\n      if (callback) {\n        callback(finished);\n      }\n      // when cancelled call inner animation's callback\n      if (!finished && nextAnimation.callback) {\n        nextAnimation.callback(false /* finished */);\n      }\n    };\n\n    function onStart(animation, value, now, previousAnimation) {\n      animation.startValue = value;\n      animation.reps = 0;\n      nextAnimation.onStart(nextAnimation, value, now, previousAnimation);\n    }\n\n    return {\n      isHigherOrder: true,\n      onFrame: repeat,\n      onStart,\n      reps: 0,\n      current: nextAnimation.current,\n      callback: repCallback,\n    };\n  });\n}\n\n/* Deprecated section, kept for backward compatibility. Will be removed soon */\nexport function delay(delayMs, _nextAnimation) {\n  'worklet';\n  console.warn('Method `delay` is deprecated. Please use `withDelay` instead');\n  return withDelay(delayMs, _nextAnimation);\n}\n\nexport function repeat(\n  _nextAnimation,\n  numberOfReps = 2,\n  reverse = false,\n  callback\n) {\n  'worklet';\n  console.warn(\n    'Method `repeat` is deprecated. Please use `withRepeat` instead'\n  );\n  return withRepeat(_nextAnimation, numberOfReps, reverse, callback);\n}\n\nexport function loop(nextAnimation, numberOfLoops = 1) {\n  'worklet';\n  console.warn('Method `loop` is deprecated. Please use `withRepeat` instead');\n  return repeat(nextAnimation, Math.round(numberOfLoops * 2), true);\n}\n\nexport function sequence(..._animations) {\n  'worklet';\n  console.warn(\n    'Method `sequence` is deprecated. Please use `withSequence` instead'\n  );\n  return withSequence(..._animations);\n}\n/* Deprecated section end */\n"]},"metadata":{},"sourceType":"module"}